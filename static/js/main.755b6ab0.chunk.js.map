{"version":3,"sources":["AppContext.js","containers/register/Register.js","containers/init/Init.js","layouts/supporter/Supporter.js","layouts/admin/NewSchool.js","layouts/admin/ListSupporters.js","layouts/admin/Messages.js","layouts/admin/EditSchool.js","layouts/admin/Admin.js","App.jsx","containers/new-user/NewUser.js","index.js"],"names":["React","createContext","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onChangeInput","key","e","value","target","setState","_ref","form","objectSpread","defineProperty","_onSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","state","email","name","group","loading","register","alert","stop","desc","role","_this2","_this$state","react_default","createElement","className","htmlFor","id","onChange","disabled","autoComplete","groups","keys","map","g","i","onClick","Component","register_Register","AppContext","Consumer","app","Register_Register","Init","server","Supporter","appendToMessageList","snap","msg","val","current","concat","toConsumableArray","updateConversation","userData","user","conversation","$tid","status","isnew","newConversations","conversations","c","_ref2","onClickConversation","open","text","messRef","off","firebase","ref","DB_PREFIX","orderByKey","limitToLast","on","preventDefault","currentUser","getIdToken","then","idToken","axios","post","tid","resp","data","error","catch","err","message","toggle","dropdown","out","ok","window","location","reload","greet","console","log","renderConversation","m","page","onSubmit","style","width","ButtonDropdown","isOpen","DropdownToggle","color","DropdownMenu","DropdownItem","placeholder","type","Icon_default","currentGroup","convRef","orderByChild","startAt","endAt","messagesEnd","createRef","prevProps","prevState","snapshot","length","animateScroll","scrollToBottom","containerId","_this$state2","AppBar_default","position","background","Toolbar_default","Typography_default","variant","lastMsg","supporter_Supporter","Supporter_Supporter","NewSchool","khoi","tự_nhiên","xã_hội","lực_lượng_vũ_trang","cao_đẳng_nghề","handleClose","handleSave","school","set","changeInput","changeCheckbox","checked","_this$props","Dialog_default","onClose","aria-labelledby","maxWidth","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","margin","label","fullWidth","FormControlLabel_default","control","Checkbox_default","DialogActions_default","Button_default","ListSupporters","updateUsers","users","decodeFirebaseArray","editUser","$uid","removeTempKeys","changeSwitch","equalTo","once","List_default","dense","ListItem_default","ListItemIcon_default","AccountCircle_default","ListItemText_default","primary","secondary","ListItemSecondaryAction_default","IconButton_default","aria-label","Create_default","Switch_default","admin_ListSupporters","ListSupporters_ListSupporters","Messages","displayMessage","index_es","answeredBy","moment","time","format","Comment_default","admin_Messages","Messages_Messages","EditSchool","Admin","updateSchool","clickSchool","s","selectedSchool","messages","clickAllMessages","_addNewSchool","addNewSchool","editSchool","schoolRef","admin_NewSchool","assign","admin_EditSchool","admin_Admin","Admin_Admin","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","_doLogin","urlParams","URLSearchParams","search","get","password","appState","signInWithEmailAndPassword","uId","_getUserInfo","uid","_doRegister","gr","createUserWithEmailAndPassword","_register","userId","_changeState","changedState","arr","id_name","Array","isArray","obj","nObj","forEach","startsWith","renderApp","combinedProps","init_Init","Provider","changeState","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","ReactDOM","render","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.755b6ab0.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({})","import React, {Component} from 'react'\nimport AppContext from '../../AppContext'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            form: {\n                email: this.props.email || '',\n                name: '',\n                group: '',\n                desc: '',\n                role: 0,\n            }\n        }\n    }\n\n    _onChangeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value\n            }\n        }))\n    }\n\n    _onSubmit = async  () => {\n        const {form} = this.state\n        if (form.email && form.name && form.group) {\n            this.setState({\n                loading: true,\n            })\n            await this.props.register(form)\n            this.setState({\n                loading: false,\n            })\n        } else {\n            alert('Vui lòng điền đầy đủ thông tin')\n        }\n    }\n\n    render() {\n        const {form, loading} = this.state\n\n        return (\n            <div className=\"Register\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\">\n                        <small className={'text-muted'}>Trước tiên, bạn phải đăng ký thông tin tài khoản trước</small>\n                        <label htmlFor={'email'}>Email</label>\n                        <input\n                            className={'form-control'}\n                            id={'email'}\n                            value={form.email}\n                            onChange={this._onChangeInput('email')}\n                            disabled\n                        />\n                        <label htmlFor={'name'}>Tên đầy đủ</label>\n                        <input\n                            className={'form-control'}\n                            value={form.name}\n                            id={'name'}\n                            autoComplete={'off'}\n                            onChange={this._onChangeInput('name')}\n                        />\n                        <label htmlFor={'group'}>Mã trường</label>\n                        <select\n                            className=\"custom-select\"\n                            value={form.group}\n                            id={'group'}\n                            onChange={this._onChangeInput('group')}\n                        >\n                            <option>Chọn một trường</option>\n                            {this.props.groups && Object.keys(this.props.groups).map((g, i) => <option\n                                key={i}\n                                value={g}\n                            >\n                                {this.props.groups[g].name}\n                            </option>)}\n                        </select>\n                        {/*<input*/}\n                            {/*className={'form-control'}*/}\n                            {/*value={form.group}*/}\n                            {/*id={'group'}*/}\n                            {/*onChange={this._onChangeInput('group')}*/}\n                            {/*autoComplete={'off'}*/}\n                        {/*/>*/}\n                        <label htmlFor={'desc'}>Lời chào</label>\n                        <input\n                            className={'form-control'}\n                            value={form.desc}\n                            id={'desc'}\n                            autoComplete={'off'}\n                            onChange={this._onChangeInput('desc')}\n                        />\n                        <button className={'btn btn-primary mt-3'} onClick={this._onSubmit} disabled={loading}>Đăng ký</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Register\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nclass Init extends Component {\n    render() {\n        return (\n            <div className=\"Register\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\">\n                        <small className={'text-muted'}>Đang setup tài khoản của bạn</small>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Init\n","import React, {Component} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport AppContext from '../../AppContext'\nimport * as firebase from 'firebase'\nimport axios from 'axios'\nimport {animateScroll} from 'react-scroll'\nimport ButtonDropdown from 'reactstrap/es/ButtonDropdown'\nimport DropdownToggle from 'reactstrap/es/DropdownToggle'\nimport DropdownMenu from 'reactstrap/es/DropdownMenu'\nimport DropdownItem from 'reactstrap/es/DropdownItem'\n\nconst server = 'https://nuichatbot.herokuapp.com'\n\nclass Supporter extends Component {\n    constructor(props) {\n        super(props)\n        const currentGroup = this.props.user.group\n\n        this.convRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\n            .orderByChild('status')\n            .startAt(2)\n            .endAt(3)\n        this.messRef = null\n\n        this.convRef.on('child_added', this.updateConversation)\n        this.convRef.on('child_changed', this.updateConversation)\n        this.messagesEnd = React.createRef()\n\n        this.state = {\n            conversations: [],\n            open: null,\n            current: [],\n            text: '',\n            dropdown: false,\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.current.length !== this.state.current.length) {\n            animateScroll.scrollToBottom({\n                containerId: 'MESSAGES'\n            })\n        }\n    }\n\n    appendToMessageList = (snap) => {\n        const msg = snap.val()\n        this.setState(({current}) => ({\n            current: [\n                ...current,\n                msg,\n            ]\n        }))\n    }\n\n    updateConversation = (snap) => {\n        const userData = this.props.user\n        const conversation = snap.val() || {}\n        conversation.$tid = snap.key\n\n        if (conversation.status !== 2 && conversation.status !== 3) return\n        if (conversation.group !== userData.group) return\n\n        var isnew = false\n        const newConversations = this.state.conversations.map(c => {\n            if (c.$tid === conversation.$tid) {\n                isnew = true\n                return conversation\n            }\n            return c\n        })\n        this.setState(({conversations}) => ({\n            conversations: !isnew ? [conversation, ...conversations] : newConversations\n        }))\n    }\n\n    onClickConversation = (c) => () => {\n        if (this.state.open && this.state.open.$tid === c.$tid) {\n            this.setState({\n                open: null,\n                current: [],\n                text: '',\n            })\n            if (this.messRef) this.messRef.off('child_added', this.appendToMessageList)\n            return\n        }\n\n        this.setState({\n            open: c,\n            current: [],\n            text: '',\n        })\n\n        this.messRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.user.group + '/' + c.$tid)\n            .orderByKey()\n            .limitToLast(20)\n\n        this.messRef.on('child_added', this.appendToMessageList)\n    }\n\n    _onSubmit = (c) => (e) => {\n        e.preventDefault()\n        if (this.state.text) return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            const {text} = this.state\n            axios.post(`${server}/pagetuyensinh/staffSendMessage`, {\n                idToken,\n                tid: c.$tid,\n                text\n            })\n                .then(resp => {\n                    const {data} = resp\n                    if (data.error) return alert(data.error)\n                    this.setState({\n                        text: '',\n                    })\n                })\n                .catch(err => alert(err.message || err))\n        })\n            .catch(e => alert(e.message || e))\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdown: !this.state.dropdown\n        })\n    }\n\n    out = () => {\n        firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            return axios.post(`${server}/pagetuyensinh/staffResetStatus`, {\n                idToken,\n                'tid': this.state.open.$tid,\n            })\n                .then(ok => {\n                    window.location.reload()\n                })\n                .catch(err => alert(err))\n        })\n    }\n\n    greet = () => {\n        return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            const c = this.state.open\n            console.log('123')\n\n            axios.post(`${server}/pagetuyensinh/staffSendMessage`, {\n                idToken,\n                tid: c.$tid,\n                text: this.props.user.desc,\n            })\n                .then(resp => {\n                    const {data} = resp\n                    if (data.error) return alert(data.error)\n                })\n                .catch(err => alert(err.message || err))\n        })\n            .catch(e => alert(e.message || e))\n    }\n\n    renderConversation = () => {\n        const {current, open, dropdown} = this.state\n\n        return <div className={'card mt-3 mb-3'}>\n            <div className={'card-header Title'} onClick={this.onClickConversation(open)}>{this.state.open.name}</div>\n            <div className=\" card-body Card\" id={'MESSAGES'}>\n                {current.map((m, i) => <div key={i} className={'Message'}>\n                    <div className={m.page ? 'Ours' : 'Yours'}>\n                        <div className={'Textt'}>{m.text}</div>\n                    </div>\n                </div>)}\n            </div>\n            <div className={'Text'}>\n                <form className={'FormMessage'} onSubmit={this._onSubmit(open)}>\n                    <div style={{\n                        width: '10%'\n                    }}>\n                        < ButtonDropdown isOpen={dropdown} toggle={this.toggle} style={{width: '10%'}}>\n                            <DropdownToggle color={'primary'}><i className='fas fa-bars'></i>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={this.greet}>\n                                    Gửi lời chào hỏi\n                                </DropdownItem>\n                                <DropdownItem onClick={this.out}>\n                                    Kết thúc chat\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </div>\n                    <input className={'form-control'} placeholder={'Gửi tin nhắn'} value={this.state.text}\n                           onChange={e => this.setState({text: e.target.value})}/>\n                    <div className={'SendIcon'}>\n                        <button type={'submit'} style={{color: '#fff'}}>\n                            <Icon>send\n                            </Icon>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    }\n\n    render\n    () {\n        const {user} = this.props\n        const {conversations, open} = this.state\n\n        return (\n            <div className={'Supporter'}>\n                <AppBar position=\"static\" style={{background: '#3E8C33'}}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">Welcome to SCS</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={'container mt-3'}>\n                    <span className=\"text-muted\">Xin chào,</span><span\n                    className={'font-weight-bold'}> {user.name}</span>\n                    {open ? this.renderConversation() :\n                        conversations.map((c, i) => <div className={'card card-body mt-3 Card'} key={i}>\n                            <div className={'Title'} onClick={this.onClickConversation(c)}>{c.name}</div>\n                            <div\n                                className={'text-muted Conversation'}>{c.lastMsg.text}</div>\n                        </div>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Supporter\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport * as firebase from 'firebase'\n\nclass NewSchool extends Component {\n    state = {\n        form: {\n            name: '',\n            key: '',\n            khoi: {\n                'tự_nhiên': false,\n                'xã_hội': false,\n                'lực_lượng_vũ_trang': false,\n                'cao_đẳng_nghề': false,\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.toggle()\n    }\n\n    handleSave = () => {\n        const {form} = this.state\n        const {school} = this.props\n        if (school[form.key]) alert('Mã trường trùng lặp')\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\n            ...school,\n            [form.key]: {\n                name: form.name,\n                khoi: form.khoi,\n            }\n        }).then(() => {\n            this.setState({\n                form: {\n                    name: '',\n                    key: '',\n                    khoi: {\n                        'tự_nhiên': false,\n                        'xã_hội': false,\n                        'lực_lượng_vũ_trang': false,\n                        'cao_đẳng_nghề': false,\n                    }\n                }\n            })\n            this.props.toggle()\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeCheckbox = (key) => (e) => {\n        const {checked} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                khoi: {\n                    ...form.khoi,\n                    [key]: checked\n                }\n            }\n        }))\n    }\n\n    render() {\n        const {open, toggle} = this.props\n        const {form} = this.state\n        const {khoi} = form\n\n        return (\n            <div className=\"NewSchool\">\n                <Dialog\n                    open={open}\n                    onClose={toggle}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"key\"\n                            onChange={this.changeInput('key')}\n                            label=\"Mã trường\"\n                            value={form.key}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            value={form.name}\n                            label=\"Tên trường\"\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['tự_nhiên']}\n                                    onChange={this.changeCheckbox('tự_nhiên')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối tự nhiên\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['xã_hội']}\n                                    onChange={this.changeCheckbox('xã_hội')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối xã hội\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['lực_lượng_vũ_trang']}\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối lực lượng vũ trang\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['cao_đẳng_nghề']}\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Các trường cao đẳng nghề\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Thêm trường\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default NewSchool\n","import React, {Component} from 'react'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FolderIcon from '@material-ui/icons/AccountCircle'\nimport DeleteIcon from '@material-ui/icons/Create'\nimport * as firebase from 'firebase'\nimport Switch from '@material-ui/core/Switch'\nimport AppContext from '../../AppContext'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nclass ListSupporters extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n        firebase.database().ref(this.props.DB_PREFIX + '/users')\n            .orderByChild('group')\n            .equalTo(this.props.school)\n            .once('value').then(snap => this.updateUsers(snap))\n    }\n\n    updateUsers = (snap) => {\n        this.setState({\n            users: this.props.decodeFirebaseArray(snap.val() || {}, 'uid')\n        })\n    }\n\n    editUser = (user) => () => {\n        this.setState({\n            editUser: user ? {...user} : null,\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                [key]: value,\n            }\n        }))\n    }\n\n    handleSave = () => {\n        const {editUser} = this.state\n        firebase.database().ref(this.props.DB_PREFIX + '/users/' + editUser.$uid).set(\n            this.props.removeTempKeys(editUser)\n            , (err) => {\n                if (!err) {\n                    console.log(123)\n                    return this.editUser()()\n                }\n                alert(err)\n            })\n    }\n\n    changeSwitch = (e) => {\n        const value = e.target.checked ? 500 : 0\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                role: value,\n            }\n        }))\n    }\n\n    render() {\n        const {users, editUser} = this.state\n\n        return (\n            <div className=\"ListSupporters\">\n                <List dense={false}>\n                    {(!users || !users.length) &&\n                    <div className=\"d-flex justify-content-center\">\n                        <div className={'text-muted'}>Không có tư vấn viên nào thuộc trường này</div>\n                    </div>}\n                    {users.map((user, i) => <ListItem key={i}>\n                        <ListItemIcon>\n                            <FolderIcon/>\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={user.name}\n                            secondary={user.role ? null : <span className={'text-muted'}>Chưa kích hoạt</span>}\n                        />\n                        <ListItemSecondaryAction>\n                            <IconButton aria-label=\"Delete\" onClick={this.editUser(user)}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>)}\n                </List>\n                <Dialog\n                    open={editUser}\n                    onClose={this.editUser(null)}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Sửa thông tin tư vấn viên</DialogTitle>\n                    <DialogContent>\n                        <FormControlLabel\n                            control={\n                                <Switch\n                                    checked={editUser ? editUser.role === 500 : false}\n                                    onChange={this.changeSwitch}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Kích hoạt tài khoản\"\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"email\"\n                            onChange={this.changeInput('email')}\n                            label=\"Email\"\n                            value={editUser ? editUser.email : ''}\n                            type={'email'}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            label=\"Tên đầy đủ\"\n                            value={editUser ? editUser.name : ''}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"desc\"\n                            onChange={this.changeInput('desc')}\n                            label=\"Tự giới thiệu\"\n                            value={editUser ? editUser.desc : ''}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.editUser(null)} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Sửa thông tin\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <ListSupporters\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\nimport * as firebase from 'firebase'\nimport AppContext from '../../AppContext'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport moment from 'moment'\nimport {Button} from '@material-ui/core'\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props)\n        const currentGroup = this.props.school\n        console.log(currentGroup)\n        this.convRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\n            .orderByChild('status')\n            .startAt(2)\n            .endAt(3)\n        this.messRef = null\n\n        this.state = {\n            conversations: [],\n            current: [],\n            c: null,\n        }\n\n        this.convRef.on('child_added', this.updateConversation)\n        this.convRef.on('child_changed', this.updateConversation)\n    }\n\n    updateConversation = (snap) => {\n        const conversation = snap.val() || {}\n        conversation.$tid = snap.key\n\n        console.log(conversation)\n        if (conversation.status !== 2 && conversation.status !== 3) return\n        if (conversation.group !== this.props.school) return\n\n        var isnew = false\n        const newConversations = this.state.conversations.map(c => {\n            if (c.$tid === conversation.$tid) {\n                isnew = true\n                return conversation\n            }\n            return c\n        })\n        this.setState(({conversations}) => ({\n            conversations: !isnew ? [conversation, ...conversations] : newConversations\n        }))\n    }\n\n    displayMessage = (c) => () => {\n        this.setState({\n            c,\n        })\n        this.messRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.school + '/' + c.$tid)\n            .orderByKey()\n            .limitToLast(20)\n\n        this.messRef.on('child_added', this.appendToMessageList)\n    }\n\n    appendToMessageList = (snap) => {\n        const msg = snap.val()\n        this.setState(({current}) => ({\n            current: [\n                ...current,\n                msg,\n            ]\n        }))\n    }\n\n    render() {\n        const {c, current} = this.state\n\n        return (\n            <div className=\"Messages\">\n                <div className={'text-muted'}>Quản lý tin nhắn</div>\n                {c ? <div className={'card card-body'}>\n                        <div className={'d-flex justify-content-between'}>\n                            <Button>\n                                {c.name}\n                            </Button>\n                            <Button onClick={() => this.setState({c: null})}>\n                                Quay lại\n                            </Button>\n                        </div>\n                        <div className={'MessagesWrapper'}>\n                            {current.map((m, i) => <div key={i} className={'Message'}>\n                                <div className={m.page ? 'Ours' : 'Yours'}>\n                                    <div className={'Textt'}>{m.text}</div>\n                                </div>\n                            </div>)}\n                        </div>\n                    </div> :\n                    <List>\n                        {this.state.conversations.map((c, i) => <ListItem key={i}>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={`Tư vấn viên: ${c.answeredBy} - ${c.lastMsg ? 'Tin nhắn cuối: ' + moment(c.lastMsg.time).format('MMMM Do YYYY, h:mm:ss a') : ''}`}\n                            />\n\n                            <ListItemSecondaryAction>\n                                <IconButton aria-label=\"Comments\" onClick={this.displayMessage(c)}>\n                                    <CommentIcon/>\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>)}\n                    </List>\n                }\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Messages\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport * as firebase from 'firebase'\n\nclass EditSchool extends Component {\n    state = {\n        form: {\n            name: '',\n            key: '',\n            khoi: {\n                'tự_nhiên': false,\n                'xã_hội': false,\n                'lực_lượng_vũ_trang': false,\n                'cao_đẳng_nghề': false,\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.open) {\n            if (!prevProps.open || prevProps.open.key !== this.props.open.key) {\n                this.setState({\n                    form: {\n                        ...this.state.form,\n                        ...this.props.open.school,\n                        key: this.props.open.key,\n                    }\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.toggle()\n    }\n\n    handleSave = () => {\n        const {form} = this.state\n        const {school} = this.props\n\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\n            ...school,\n            [form.key]: {\n                name: form.name,\n                khoi: form.khoi,\n            }\n        }).then(() => {\n            this.setState({\n                form: {\n                    name: '',\n                    key: '',\n                    khoi: {\n                        'tự_nhiên': false,\n                        'xã_hội': false,\n                        'lực_lượng_vũ_trang': false,\n                        'cao_đẳng_nghề': false,\n                    }\n                }\n            })\n            this.props.toggle()\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeCheckbox = (key) => (e) => {\n        const {checked} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                khoi: {\n                    ...form.khoi,\n                    [key]: checked\n                }\n            }\n        }))\n    }\n\n    render() {\n        const {open, toggle} = this.props\n        const {form} = this.state\n        const {khoi} = form\n\n        return (\n            <div className=\"NewSchool\">\n                <Dialog\n                    open={open}\n                    onClose={toggle}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"key\"\n                            onChange={this.changeInput('key')}\n                            label=\"Mã trường\"\n                            value={form.key}\n                            fullWidth\n                            disabled\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            value={form.name}\n                            label=\"Tên trường\"\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['tự_nhiên']}\n                                    onChange={this.changeCheckbox('tự_nhiên')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối tự nhiên\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['xã_hội']}\n                                    onChange={this.changeCheckbox('xã_hội')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối xã hội\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['lực_lượng_vũ_trang']}\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối lực lượng vũ trang\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['cao_đẳng_nghề']}\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Các trường cao đẳng nghề\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Sửa thông tin trường\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default EditSchool\n","import React, {Component} from 'react'\nimport AppContext from '../../AppContext'\nimport * as firebase from 'firebase'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport NewSchool from './NewSchool'\nimport ListSupporters from './ListSupporters'\nimport Messages from './Messages'\nimport EditSchool from './EditSchool'\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props)\n\n        this.schoolRef = firebase.database().ref(this.props.DB_PREFIX + '/groups')\n        this.schoolRef.on('child_added', this.updateSchool)\n        this.schoolRef.on('child_changed', this.updateSchool)\n        this.state = {\n            school: {},\n            addNewSchool: false\n        }\n    }\n\n    updateSchool = (snap) => {\n        this.setState(({school}) => ({\n            school: {\n                ...school,\n                [snap.key]: snap.val(),\n            }\n        }))\n    }\n\n    clickSchool = (s) => () => {\n        this.setState({\n            selectedSchool: s,\n            messages: null,\n        })\n        //\n        // firebase.database().ref(this.props.DB_PREFIX- + '/users')\n        //     .orderByChild('group')\n        //     .equalTo(s)\n        //     .once('value').then(snap => {\n        //     var users = this.props.decodeFirebaseArray(snap.val() || {}, 'uid')\n        // })\n    }\n\n    clickAllMessages = (s) => () => {\n        this.setState({\n            selectedSchool: null,\n            messages: s,\n        })\n    }\n\n    _addNewSchool = () => {\n        this.setState({\n            addNewSchool: !this.state.addNewSchool,\n        })\n    }\n\n    editSchool = (key, school) => () => {\n        if (!key || !school) return this.setState({\n            editSchool: null\n        })\n        this.setState({\n            editSchool: {\n                key, school\n            }\n        })\n    }\n\n    render() {\n        const {school, selectedSchool, addNewSchool, messages, editSchool} = this.state\n\n        return (\n            <div className=\"Admin\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">SCS - Admin</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={'container mt-3'}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this._addNewSchool}>\n                        Thêm trường\n                    </Button>\n                    <NewSchool\n                        open={addNewSchool}\n                        toggle={this._addNewSchool}\n                        school={school}\n                        {...this.props}\n                    />\n                    <EditSchool\n                        open={editSchool}\n                        toggle={this.editSchool()}\n                        school={school}\n                        {...this.props}\n                    />\n                    {selectedSchool ? <div className={'card mt-3'}>\n                        <div className={'card-header'}>\n\n                            <div className=\"d-flex justify-content-between\">\n                                <Button>\n                                    {school[selectedSchool].name}\n                                </Button>\n                                <Button onClick={() => this.setState({\n                                    selectedSchool: null,\n                                })}>\n                                    Quay lại\n                                </Button>\n                            </div>\n                        </div>\n                        <div className={'card-body'}>\n                            <div className=\"text-muted\">Quản lý danh sách tư vấn viên</div>\n                            <ListSupporters school={selectedSchool}/>\n                        </div>\n                    </div> : messages ? <div className={'card mt-3'}>\n                            <div className={'card-header'}>\n\n                                <div className=\"d-flex justify-content-between\">\n                                    <Button>\n                                        {school[messages].name}\n                                    </Button>\n                                    <Button onClick={() => this.setState({\n                                        messages: null,\n                                    })}>\n                                        Quay lại\n                                    </Button>\n\n                                </div>\n                            </div>\n                            <div className={'card-body'}>\n                                <Messages school={messages}/>\n                            </div>\n                        </div> :\n                        Object.keys(school).map((s, i) => <div className={'card card-body mt-3 Card'} key={i}>\n                            <span\n                                onClick={this.clickSchool(s)}\n                                className={'Cursor'}\n                            >\n                                {school[s].name}\n                            </span>\n                            <Button\n                                onClick={this.clickAllMessages(s)}\n                            >\n                                Xem tin nhắn\n                            </Button>\n                            <Button\n                                onClick={this.clickSchool(s)}\n                            >\n                                Quản lý tư vấn viên\n                            </Button>\n                            <Button\n                                onClick={this.editSchool(s, school[s])}\n                            >\n                                Sửa thông tin trường\n                            </Button>\n                        </div>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Admin\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\nimport AppContext from './AppContext'\nimport PropTypes from 'prop-types'\nimport {withStyles} from '@material-ui/core/styles'\nimport * as firebase from 'firebase'\nimport Register from './containers/register/Register'\nimport Init from './containers/init/Init'\nimport Supporter from './layouts/supporter/Supporter'\nimport Admin from './layouts/admin/Admin'\nimport NewUser from './containers/new-user/NewUser'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nconst DB_PREFIX = 'pagetuyensinh'\n\nconst config = {\n    apiKey: 'AIzaSyBxBvZZPxo06HQWHWudRGytuJoSNw5LNX8',\n    authDomain: 'localhost',\n    databaseURL: 'https://page-tuyen-sinh.firebaseio.com',\n    projectId: 'page-tuyen-sinh',\n    storageBucket: 'page-tuyen-sinh.appspot.com',\n    messagingSenderId: '497060879105'\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        }\n        this.state = {\n            appState: null,\n            DB_PREFIX,\n        }\n    }\n\n    componentWillMount() {\n        this._doLogin()\n    }\n\n    _doLogin = () => {\n        const urlParams = new URLSearchParams(window.location.search)\n        const email = urlParams.get('email')\n        const password = urlParams.get('password')\n\n        if (!email) return this.setState({\n            appState: 'new_user'\n        })\n\n        this.setState({\n            appState: 'loading',\n            email,\n            password,\n        })\n\n        firebase.auth().signInWithEmailAndPassword(\n            email, password\n        ).then((data) => {\n            this.setState({\n                uId: data.$uid\n            })\n            this._getUserInfo(data.user.uid)\n        }).catch((error) => {\n            if (error.message === 'The password is invalid or the user does not have a password.') return alert('Sai mật khẩu')\n            this._doRegister(email, password)\n        })\n    }\n\n    _getUserInfo = (uid) => {\n        firebase.database().ref(DB_PREFIX + '/users/' + uid).once('value')\n            .then(snap => {\n                firebase.database().ref(DB_PREFIX + '/groups').once('value').then(gr => {\n                    var groups = gr.val()\n                    console.log(groups)\n                    var userData = snap.val() || {}\n                    userData.$uid = uid\n                    if (!userData.role) {\n                        this.setState({\n                            appState: 'register',\n                            uid,\n                            groups,\n                        })\n                    } else {\n                        const {role} = userData\n                        this.setState({\n                            appState: role === 1000 ? 'admin' : 'supporter',\n                            user: userData,\n                        })\n                    }\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    _doRegister = (email, password) => {\n        this.setState({\n            appState: 'init',\n        })\n\n        return firebase.auth().createUserWithEmailAndPassword(\n            email, password\n        ).then(() => {\n            this._doLogin()\n        }).catch((e) => {\n            alert('Có lỗi xảy ra, vui lòng báo lại với admin')\n        })\n    }\n\n    _register = (user) => {\n        const userId = this.state.uid\n        return firebase.database().ref(DB_PREFIX + '/users/' + userId).set(\n            this.removeTempKeys(user)\n            , (err) => {\n                if (err) {\n                    console.log(err)\n                    alert('Có lỗi xảy ra')\n                }\n                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\n            });\n    }\n\n    _changeState = (changedState) => this.setState(changedState)\n\n    decodeFirebaseArray = (arr, id_name) => {\n        if (!arr || Array.isArray(arr)) return arr;\n        return Object.keys(arr).map(function (key) {\n            arr[key]['$' + id_name] = key;\n            return arr[key];\n        });\n    }\n\n    removeTempKeys = (obj) => {\n        var nObj = Object.assign({}, obj);\n        Object.keys(nObj).forEach(function (key) {\n            if (key.startsWith('$')) delete nObj[key];\n        });\n        return nObj;\n    }\n\n    renderApp = () => {\n        const {appState} = this.state\n        const combinedProps = {\n            ...this.props,\n            ...this.state,\n        }\n        if (appState === 'loading') return <p>loading</p>\n        if (appState === 'init') return <Init/>\n        if (appState === 'register') return <Register {...combinedProps}/>\n        if (appState === 'supporter') return <Supporter {...combinedProps}/>\n        if (appState === 'admin') return <Admin {...combinedProps}/>\n        return null\n    }\n\n    render() {\n\n        return (\n            <AppContext.Provider\n                value={{\n                    app: this.state,\n                    changeState: this._changeState,\n                    register: this._register,\n                    removeTempKeys: this.removeTempKeys,\n                    decodeFirebaseArray: this.decodeFirebaseArray,\n                    DB_PREFIX,\n                }}\n            >\n                {this.renderApp()}\n            </AppContext.Provider>\n        )\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(App)\n","import React, {Component} from 'react'\nimport * as firebase from 'firebase'\nimport AppContext from '../../AppContext'\n\nclass NewUser extends Component {\n    state = {form: {role: 500}, loading: false,}\n\n    _onChangeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value\n            }\n        }))\n    }\n\n    _onSubmit = (e) => {\n        e.preventDefault()\n        this.setState({\n            loading: true,\n        })\n\n        const {email, password, repassword} = this.state.form\n        if (password !== repassword) return alert('Nhập lại mật khẩu')\n\n        firebase.auth().createUserWithEmailAndPassword(\n            email, password\n        )\n            .then(() => {\n                return firebase.auth().signInWithEmailAndPassword(email, password)\n                    .then(data => {\n                        const uId = data.$uid\n                        const {password, repassword, ...restUser} = this.state.form\n                        return firebase.database().ref(this.props.DB_PREFIX + '/users/' + uId).set(\n                            this.props.removeTempKeys(restUser)\n                            , (err) => {\n                                if (err) {\n                                    console.log(err)\n                                    alert('Có lỗi xảy ra')\n                                }\n                                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\n                            })\n                    })\n                    .catch(e => {\n                        console.log(e)\n                    })\n            })\n            .catch(e => {\n                const {code} = e\n                if (code === 'auth/email-already-in-use') return alert('Email này đã được sử dụng')\n                alert('Có lỗi xảy ra, vui lòng báo lại với admin')\n            })\n    }\n\n    render() {\n        const {form, loading} = this.state\n\n        return (\n            <div className=\"NewUser mt-5\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\">\n                        <p className={'text-muted'}>Đăng ký tài khoản</p>\n                        <form onSubmit={this._onSubmit}><label htmlFor={'email'}>Email</label>\n                            <input\n                                className={'form-control'}\n                                id={'email'}\n                                value={form.email}\n                                autoComplete={'false'}\n                                onChange={this._onChangeInput('email')}\n                            />\n                            <label htmlFor={'password'}>Mật khẩu</label>\n                            <input\n                                className={'form-control'}\n                                id={'password'}\n                                value={form.password}\n                                autoComplete={'false'}\n                                onChange={this._onChangeInput('password')}\n                                type={'password'}\n                            />\n                            <label htmlFor={'repassword'}>Nhập lại mật khẩu</label>\n                            <input\n                                className={'form-control'}\n                                id={'repassword'}\n                                value={form.repassword}\n                                autoComplete={'false'}\n                                onChange={this._onChangeInput('repassword')}\n                                type={'password'}\n                            />\n                            <label htmlFor={'name'}>Tên đầy đủ</label>\n                            <input\n                                className={'form-control'}\n                                value={form.name}\n                                id={'name'}\n                                autoComplete={'off'}\n                                onChange={this._onChangeInput('name')}\n                            />\n                            <label htmlFor={'group'}>Mã trường</label>\n                            <input\n                                className={'form-control'}\n                                value={form.group}\n                                id={'group'}\n                                onChange={this._onChangeInput('group')}\n                                autoComplete={'off'}\n                            />\n                            <label htmlFor={'desc'}>Lời chào</label>\n                            <input\n                                className={'form-control'}\n                                value={form.desc}\n                                id={'desc'}\n                                autoComplete={'off'}\n                                onChange={this._onChangeInput('desc')}\n                            />\n                            <button className={'btn btn-primary mt-3'} type={'submit'} disabled={loading}>Đăng ký tài\n                                khoản\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <NewUser\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport './scss/index.scss'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}
{"version":3,"sources":["AppContext.js","containers/register/Register.js","containers/init/Init.js","layouts/supporter/Supporter.js","layouts/admin/NewSchool.js","layouts/admin/ListSupporters.js","layouts/admin/Messages.js","layouts/admin/EditSchool.js","layouts/admin/Admin.js","App.jsx","containers/new-user/NewUser.js","index.js"],"names":["React","createContext","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onChangeInput","key","e","value","target","setState","_ref","form","objectSpread","defineProperty","_onSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","state","email","name","group","length","loading","register","alert","stop","desc","role","_this2","_this$state","blockMsg","display","isLocked","regForm","react_default","createElement","className","style","htmlFor","id","onChange","disabled","autoComplete","groups","keys","map","g","i","placeholder","onClick","Component","register_Register","AppContext","Consumer","app","Register_Register","Init","server","process","Supporter","appendToMessageList","snap","msg","val","current","concat","toConsumableArray","updateConversation","userData","user","conversation","$tid","status","newConversations","conversations","filter","c","unshift","sort","b","lastMsg","time","_ref2","onClickConversation","open","text","messRef","off","firebase","ref","DB_PREFIX","orderByKey","limitToLast","on","preventDefault","currentUser","getIdToken","then","idToken","axios","post","tid","resp","data","error","catch","err","message","toggle","dropdown","out","window","confirm","ok","location","reload","greet","console","log","renderConversation","m","page","onSubmit","width","ButtonDropdown","isOpen","DropdownToggle","color","DropdownMenu","DropdownItem","type","Icon_default","editUser","changeInput","_ref3","handleSaveUser","$uid","set","removeTempKeys","currentGroup","convRef","orderByChild","startAt","endAt","messagesEnd","createRef","prevProps","prevState","snapshot","animateScroll","scrollToBottom","containerId","_this$state2","bgRead","background-color","bgUnread","AppBar_default","position","background","Toolbar_default","Typography_default","variant","Button_default","substring","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","margin","fullWidth","DialogActions_default","supporter_Supporter","Supporter_Supporter","NewSchool","khoi","tự_nhiên","xã_hội","lực_lượng_vũ_trang","cao_đẳng_nghề","handleClose","handleSave","school","changeCheckbox","checked","_this$props","maxWidth","label","FormControlLabel_default","control","Checkbox_default","ListSupporters","updateUsers","users","decodeFirebaseArray","changeSwitch","equalTo","List_default","dense","ListItem_default","ListItemIcon_default","AccountCircle_default","ListItemText_default","primary","ListItemSecondaryAction_default","IconButton_default","aria-label","Create_default","Switch_default","admin_ListSupporters","ListSupporters_ListSupporters","Messages","psid","isnew","displayMessage","index_es","secondary","answeredBy","moment","format","Comment_default","admin_Messages","Messages_Messages","EditSchool","xoa_dau","str","replace","Admin","updateSchool","code","clickSchool","s","selectedSchool","messages","clickAllMessages","_addNewSchool","addNewSchool","editSchool","search","once","schools","forEach","showIfAdmin","admin_NewSchool","assign","admin_EditSchool","toLowerCase","includes","toLocaleLowerCase","admin_Admin","Admin_Admin","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","_doLogin","urlParams","URLSearchParams","get","password","appState","signInWithEmailAndPassword","uId","_getUserInfo","uid","_doRegister","gr","createUserWithEmailAndPassword","_register","userId","_changeState","changedState","arr","id_name","Array","isArray","obj","nObj","startsWith","renderApp","combinedProps","src","init_Init","Provider","changeState","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","ReactDOM","render","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.17dbce2f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default React.createContext({})","import React, {Component} from 'react'\r\nimport AppContext from '../../AppContext'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            form: {\r\n                email: this.props.email || '',\r\n                name: '',\r\n                group: '',\r\n                desc: '',\r\n                role: 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    _onChangeInput = (key) => (e) => {\r\n        const {value} = e.target\r\n\r\n        this.setState(({form}) => ({\r\n            form: {\r\n                ...form,\r\n                [key]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    _onSubmit = async  () => {\r\n        const {form} = this.state\r\n        if (form.email && form.name && form.group && form.name.length > 10) {\r\n            this.setState({\r\n                loading: true,\r\n            })\r\n            await this.props.register(form)\r\n            this.setState({\r\n                loading: false,\r\n            })\r\n        } else {\r\n            alert('Vui lòng điền đầy đủ thông tin')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {form, loading} = this.state\r\n        var blockMsg = {\r\n\t\t\tdisplay: this.props.isLocked ? \"flex\" : \"none\"\r\n\t\t}\r\n\t\t\r\n\t\tvar regForm = {\r\n\t\t\tdisplay: this.props.isLocked ? \"none\" : \"flex\"\r\n\t\t}\r\n\r\n        return (\r\n            <div className=\"Register\">\r\n                <div className=\"container\">\r\n                    <div className=\"card card-body Card\" style={blockMsg}>\r\n                        Tài khoản của bạn chưa được kích hoạt.<br/>Bạn hãy đợi thêm hoặc thông báo với admin nhé!\r\n                    </div>\r\n                    <div className=\"card card-body Card\" style={regForm}>\r\n                        <small className={'text-muted'}>Trước tiên, bạn phải đăng ký thông tin tài khoản trước</small><br/>\r\n                        <label htmlFor={'email'}>Email</label>\r\n                        <input\r\n                            className={'form-control'}\r\n                            id={'email'}\r\n                            value={form.email}\r\n                            onChange={this._onChangeInput('email')}\r\n                            disabled\r\n                        />\r\n                        <label htmlFor={'name'}>Tên đầy đủ</label>\r\n                        <input\r\n                            className={'form-control'}\r\n                            value={form.name}\r\n                            id={'name'}\r\n                            autoComplete={'off'}\r\n                            onChange={this._onChangeInput('name')}\r\n                        />\r\n                        <label htmlFor={'group'}>Mã trường</label>\r\n                        <select\r\n                            className=\"custom-select\"\r\n                            value={form.group}\r\n                            id={'group'}\r\n                            onChange={this._onChangeInput('group')}\r\n                        >\r\n                            <option>Chọn một trường</option>\r\n                            {this.props.groups && Object.keys(this.props.groups).map((g, i) => <option\r\n                                key={i}\r\n                                value={g}\r\n                            >\r\n                                {this.props.groups[g].name}\r\n                            </option>)}\r\n                        </select>\r\n                        {/*<input*/}\r\n                            {/*className={'form-control'}*/}\r\n                            {/*value={form.group}*/}\r\n                            {/*id={'group'}*/}\r\n                            {/*onChange={this._onChangeInput('group')}*/}\r\n                            {/*autoComplete={'off'}*/}\r\n                        {/*/>*/}\r\n                        <label htmlFor={'desc'}>Lời chào (là tin nhắn sẽ gửi để giới thiệu bản thân khi bạn bắt đầu trả lời tin nhắn)</label>\r\n                        <input\r\n                            className={'form-control'}\r\n                            value={form.desc}\r\n                            placeholder=\"VD: Xin chào em, anh/chị tên là ABC, học ở lớp DEF trường XYZ\"\r\n                            id={'desc'}\r\n                            autoComplete={'off'}\r\n                            onChange={this._onChangeInput('desc')}\r\n                        />\r\n                        <button className={'btn btn-primary mt-3'} onClick={this._onSubmit} disabled={loading}>Đăng ký</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(app) => <Register\r\n                {...{\r\n                    ...app,\r\n                    ...props,\r\n                }}\r\n            />}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nclass Init extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Register\">\r\n                <div className=\"container\">\r\n                    <div className=\"card card-body Card\">\r\n                        <small className={'text-muted'}>Đang setup tài khoản của bạn</small>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Init\r\n","import React, {Component} from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Icon from '@material-ui/core/Icon'\r\nimport AppContext from '../../AppContext'\r\nimport * as firebase from 'firebase'\r\nimport axios from 'axios'\r\nimport {animateScroll} from 'react-scroll'\r\nimport ButtonDropdown from 'reactstrap/es/ButtonDropdown'\r\nimport DropdownToggle from 'reactstrap/es/DropdownToggle'\r\nimport DropdownMenu from 'reactstrap/es/DropdownMenu'\r\nimport DropdownItem from 'reactstrap/es/DropdownItem'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst server = process.env.REACT_APP_SERVER\r\n\r\nclass Supporter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const currentGroup = this.props.user.group\r\n\r\n        this.convRef = firebase.database()\r\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\r\n            .orderByChild('status')\r\n            .startAt(2)\r\n            .endAt(3)\r\n        this.messRef = null\r\n\r\n        this.convRef.on('child_added', this.updateConversation)\r\n        this.convRef.on('child_changed', this.updateConversation)\r\n        this.messagesEnd = React.createRef()\r\n\r\n        this.state = {\r\n            conversations: [],\r\n            open: null,\r\n            current: [],\r\n            text: '',\r\n            dropdown: false,\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.current.length !== this.state.current.length) {\r\n            animateScroll.scrollToBottom({\r\n                containerId: 'MESSAGES'\r\n            })\r\n        }\r\n    }\r\n\r\n    appendToMessageList = (snap) => {\r\n        const msg = snap.val()\r\n        this.setState(({current}) => ({\r\n            current: [\r\n                ...current,\r\n                msg,\r\n            ]\r\n        }))\r\n    }\r\n\r\n    updateConversation = (snap) => {\r\n        const userData = this.props.user\r\n        const conversation = snap.val() || {}\r\n        conversation.$tid = snap.key\r\n\r\n        if (conversation.status !== 2 && conversation.status !== 3) return\r\n        if (conversation.group !== userData.group) return\r\n\r\n        // delete old conversation\r\n        const newConversations = this.state.conversations.filter(c => {\r\n            return c.$tid !== conversation.$tid\r\n        })\r\n        // add new conversation to top\r\n        newConversations.unshift(conversation)\r\n        // sort by time\r\n        newConversations.sort((a, b) => {\r\n            if (!a.lastMsg || !b.lastMsg) return 0\r\n            if (a.lastMsg.time > b.lastMsg.time) {\r\n                return -1\r\n            } else if (a.lastMsg.time < b.lastMsg.time) {\r\n                return 1\r\n            }\r\n            return 0\r\n        })\r\n\r\n        this.setState(({conversations}) => ({\r\n            conversations: newConversations\r\n        }))\r\n    }\r\n\r\n    onClickConversation = (c) => () => {\r\n        if (this.state.open && this.state.open.$tid === c.$tid) {\r\n            this.setState({\r\n                open: null,\r\n                current: [],\r\n                text: '',\r\n            })\r\n            if (this.messRef) this.messRef.off('child_added', this.appendToMessageList)\r\n            return\r\n        }\r\n\r\n        this.setState({\r\n            open: c,\r\n            current: [],\r\n            text: '',\r\n        })\r\n\r\n        this.messRef = firebase.database()\r\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.user.group + '/' + c.$tid)\r\n            .orderByKey()\r\n            .limitToLast(20)\r\n\r\n        this.messRef.on('child_added', this.appendToMessageList)\r\n    }\r\n\r\n    _onSubmit = (c) => (e) => {\r\n        e.preventDefault()\r\n        if (this.state.text) return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\r\n            const {text} = this.state\r\n            axios.post(`https://${server}/pagetuyensinh/staffSendMessage`, {\r\n                idToken,\r\n                tid: c.$tid,\r\n                text\r\n            })\r\n                .then(resp => {\r\n                    const {data} = resp\r\n                    if (data.error) return alert(data.error)\r\n                    this.setState({\r\n                        text: '',\r\n                    })\r\n                })\r\n                .catch(err => alert(err.message || err))\r\n        })\r\n            .catch(e => alert(e.message || e))\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            dropdown: !this.state.dropdown\r\n        })\r\n    }\r\n\r\n    out = () => {\r\n        if (!window.confirm('Bạn có chắc chắn muốn kết thúc cuộc trò chuyện này?')) return\r\n        firebase.auth().currentUser.getIdToken(true).then((idToken) => {\r\n            return axios.post(`https://${server}/pagetuyensinh/staffResetStatus`, {\r\n                idToken,\r\n                'tid': this.state.open.$tid,\r\n            })\r\n                .then(ok => {\r\n                    window.location.reload()\r\n                })\r\n                .catch(err => alert(err))\r\n        })\r\n    }\r\n\r\n    greet = () => {\r\n        return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\r\n            const c = this.state.open\r\n            console.log('123')\r\n\r\n            axios.post(`${process.env.REACT_APP_SERVER}/pagetuyensinh/staffSendMessage`, {\r\n                idToken,\r\n                tid: c.$tid,\r\n                text: this.props.user.desc,\r\n            })\r\n                .then(resp => {\r\n                    const {data} = resp\r\n                    if (data.error) return alert(data.error)\r\n                })\r\n                .catch(err => alert(err.message || err))\r\n        })\r\n            .catch(e => alert(e.message || e))\r\n    }\r\n\r\n    renderConversation = () => {\r\n        const {current, open, dropdown} = this.state\r\n\r\n        return <div className={'card mt-3 mb-3'}>\r\n            <div className={'card-header Title'} onClick={this.onClickConversation(open)}><b>↩ Quay lại </b> | {this.state.open.name}</div>\r\n            <div className=\" card-body Card\" id={'MESSAGES'}>\r\n                {current.map((m, i) => <div key={i} className={'Message'}>\r\n                    <div className={m.page ? 'Ours' : 'Yours'}>\r\n                        <div className={'Textt'}>{m.text}</div>\r\n                    </div>\r\n                </div>)}\r\n            </div>\r\n            <div className={'Text'}>\r\n                <form className={'FormMessage'} onSubmit={this._onSubmit(open)}>\r\n                    <div style={{\r\n                        width: '10%'\r\n                    }}>\r\n                        < ButtonDropdown isOpen={dropdown} toggle={this.toggle} style={{width: '10%'}}>\r\n                            <DropdownToggle color={'primary'}><i className='fas fa-bars'></i>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem onClick={this.greet}>\r\n                                    Gửi lời chào hỏi\r\n                                </DropdownItem>\r\n                                <DropdownItem onClick={this.out}>\r\n                                    Kết thúc chat\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </ButtonDropdown>\r\n                    </div>\r\n                    <input className={'form-control'} placeholder={'Gửi tin nhắn'} value={this.state.text}\r\n                           onChange={e => this.setState({text: e.target.value})}/>\r\n                    <div className={'SendIcon'}>\r\n                        <button type={'submit'} style={{color: '#fff'}}>\r\n                            <Icon>send\r\n                            </Icon>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    editUser = (user) => () => {\r\n        this.setState({\r\n            editUser: user ? {...user} : null,\r\n        })\r\n    }\r\n\r\n    changeInput = (key) => (e) => {\r\n        const {value} = e.target\r\n\r\n        this.setState(({editUser}) => ({\r\n            editUser: {\r\n                ...editUser,\r\n                [key]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleSaveUser = () => {\r\n        const {editUser} = this.state\r\n        firebase.database().ref(this.props.DB_PREFIX + '/users/' + editUser.$uid).set(\r\n            this.props.removeTempKeys(editUser)\r\n            , (err) => {\r\n                if (!err) {\r\n                    console.log(123)\r\n                    return this.editUser()()\r\n                }\r\n                alert(err)\r\n            })\r\n    }\r\n\r\n    render\r\n    () {\r\n        const {user} = this.props\r\n        const {conversations, open, editUser} = this.state\r\n        const bgRead = { 'background-color': '#fff' }\r\n        const bgUnread = { 'background-color': '#eee' }\r\n\r\n        return (\r\n            <div className={'Supporter'}>\r\n                <AppBar position=\"static\" style={{background: '#3E8C33'}}>\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\">Welcome to SCS</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={'container mt-3'}>\r\n                    <span className=\"text-muted\">Xin chào,</span>\r\n                    <span className={'font-weight-bold'}> {user.name}</span>\r\n                    <Button onClick={this.editUser(user)} color=\"primary\">Sửa lời chào</Button>\r\n\r\n                    {open ? this.renderConversation() :\r\n                        conversations.map((c, i) => <div className={'card card-body mt-3 Card'} key={i} onClick={this.onClickConversation(c)} style={c.status !== 3 ? bgRead : bgUnread}>\r\n                            { c.status !== 3\r\n                                ? <div className={'Title'}><b>{c.name}</b></div>\r\n                                : <div className={'Title'}>{c.name}</div>\r\n                            }\r\n                            <div\r\n                                className={'text-muted Conversation'}>{c.lastMsg.text.substring(0,100)}{c.lastMsg.text.length < 100 ? '' : '...'}</div>\r\n                        </div>)}\r\n                </div>\r\n\r\n                <Dialog\r\n                    open={editUser}\r\n                    onClose={this.editUser(null)}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">Sửa lời chào</DialogTitle>\r\n                    <DialogContent>\r\n                        <p>Tự giới thiệu (là tin nhắn sẽ gửi để giới thiệu bản thân khi bạn bắt đầu trả lời tin nhắn)</p>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"desc\"\r\n                            onChange={this.changeInput('desc')}\r\n                            placeholder=\"VD: Xin chào em, anh/chị tên là ABC, học ở lớp DEF trường XYZ\"\r\n                            value={editUser ? editUser.desc : ''}\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.editUser(null)} color=\"primary\">\r\n                            Hủy\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={this.handleSaveUser} color=\"primary\">\r\n                            Sửa thông tin\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(app) => <Supporter\r\n                {...{\r\n                    ...app,\r\n                    ...props,\r\n                }}\r\n            />}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport * as firebase from 'firebase'\r\n\r\nclass NewSchool extends Component {\r\n    state = {\r\n        form: {\r\n            name: '',\r\n            key: '',\r\n            khoi: {\r\n                'tự_nhiên': false,\r\n                'xã_hội': false,\r\n                'lực_lượng_vũ_trang': false,\r\n                'cao_đẳng_nghề': false,\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.toggle()\r\n    }\r\n\r\n    handleSave = () => {\r\n        const {form} = this.state\r\n        const {school} = this.props\r\n        if (school[form.key]) alert('Mã trường trùng lặp')\r\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\r\n            ...school,\r\n            [form.key]: {\r\n                name: form.name,\r\n                khoi: form.khoi,\r\n            }\r\n        }).then(() => {\r\n            this.setState({\r\n                form: {\r\n                    name: '',\r\n                    key: '',\r\n                    khoi: {\r\n                        'tự_nhiên': false,\r\n                        'xã_hội': false,\r\n                        'lực_lượng_vũ_trang': false,\r\n                        'cao_đẳng_nghề': false,\r\n                    }\r\n                }\r\n            })\r\n            this.props.toggle()\r\n        })\r\n    }\r\n\r\n    changeInput = (key) => (e) => {\r\n        const {value} = e.target\r\n        this.setState(({form}) => ({\r\n            form: {\r\n                ...form,\r\n                [key]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    changeCheckbox = (key) => (e) => {\r\n        const {checked} = e.target\r\n        this.setState(({form}) => ({\r\n            form: {\r\n                ...form,\r\n                khoi: {\r\n                    ...form.khoi,\r\n                    [key]: checked\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {open, toggle} = this.props\r\n        const {form} = this.state\r\n        const {khoi} = form\r\n\r\n        return (\r\n            <div className=\"NewSchool\">\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={toggle}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    maxWidth={'lg'}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"key\"\r\n                            onChange={this.changeInput('key')}\r\n                            label=\"Mã trường\"\r\n                            value={form.key}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            onChange={this.changeInput('name')}\r\n                            value={form.name}\r\n                            label=\"Tên trường\"\r\n                            fullWidth\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['tự_nhiên']}\r\n                                    onChange={this.changeCheckbox('tự_nhiên')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Khối tự nhiên\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['xã_hội']}\r\n                                    onChange={this.changeCheckbox('xã_hội')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Khối xã hội\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['lực_lượng_vũ_trang']}\r\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Khối lực lượng vũ trang\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['cao_đẳng_nghề']}\r\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Các trường cao đẳng nghề\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Hủy\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\r\n                            Thêm trường\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSchool\r\n","import React, {Component} from 'react'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport FolderIcon from '@material-ui/icons/AccountCircle'\r\nimport DeleteIcon from '@material-ui/icons/Create'\r\nimport * as firebase from 'firebase'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport AppContext from '../../AppContext'\r\nimport Button from '@material-ui/core/Button'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\n\r\nclass ListSupporters extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            users: []\r\n        }\r\n        this.ref = firebase.database().ref(this.props.DB_PREFIX + '/users')\r\n            .orderByChild('group')\r\n            .equalTo(this.props.school)\r\n        this.ref.on('value', snap => this.updateUsers(snap))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.ref.off()\r\n    }\r\n\r\n    updateUsers = (snap) => {\r\n        this.setState({\r\n            users: this.props.decodeFirebaseArray(snap.val() || {}, 'uid')\r\n        })\r\n    }\r\n\r\n    editUser = (user) => () => {\r\n        this.setState({\r\n            editUser: user ? {...user} : null,\r\n        })\r\n    }\r\n\r\n    changeInput = (key) => (e) => {\r\n        const {value} = e.target\r\n\r\n        this.setState(({editUser}) => ({\r\n            editUser: {\r\n                ...editUser,\r\n                [key]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleSave = () => {\r\n        const {editUser} = this.state\r\n        firebase.database().ref(this.props.DB_PREFIX + '/users/' + editUser.$uid).set(\r\n            this.props.removeTempKeys(editUser)\r\n            , (err) => {\r\n                if (!err) {\r\n                    console.log(123)\r\n                    return this.editUser()()\r\n                }\r\n                alert(err)\r\n            })\r\n    }\r\n\r\n    changeSwitch = (e) => {\r\n        const value = e.target.checked ? 500 : 0\r\n        this.setState(({editUser}) => ({\r\n            editUser: {\r\n                ...editUser,\r\n                role: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {users, editUser} = this.state\r\n\r\n        return (\r\n            <div className=\"ListSupporters\">\r\n                <List dense={false}>\r\n                    {(!users || !users.length) &&\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <div className={'text-muted'}>Không có tư vấn viên nào thuộc trường này</div>\r\n                    </div>}\r\n                    {users.map((user, i) => <ListItem key={i}>\r\n                        <ListItemIcon>\r\n                            <FolderIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary={user.role ? user.name : <span>{user.name} - <span className={'text-muted'}>Chưa kích hoạt</span></span>}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton aria-label=\"Delete\" onClick={this.editUser(user)}>\r\n                                <DeleteIcon/>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>)}\r\n                </List>\r\n                <Dialog\r\n                    open={editUser}\r\n                    onClose={this.editUser(null)}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">Sửa thông tin tư vấn viên</DialogTitle>\r\n                    <DialogContent>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    checked={editUser ? editUser.role === 500 : false}\r\n                                    onChange={this.changeSwitch}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Kích hoạt tài khoản\"\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            onChange={this.changeInput('email')}\r\n                            label=\"Email\"\r\n                            value={editUser ? editUser.email : ''}\r\n                            type={'email'}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            onChange={this.changeInput('name')}\r\n                            label=\"Tên đầy đủ\"\r\n                            value={editUser ? editUser.name : ''}\r\n                            fullWidth\r\n                        />\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"desc\"\r\n                            onChange={this.changeInput('desc')}\r\n                            label=\"Tự giới thiệu\"\r\n                            value={editUser ? editUser.desc : ''}\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.editUser(null)} color=\"primary\">\r\n                            Hủy\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\r\n                            Sửa thông tin\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(app) => <ListSupporters\r\n                {...{\r\n                    ...app,\r\n                    ...props,\r\n                }}\r\n            />}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\nimport * as firebase from 'firebase'\r\nimport AppContext from '../../AppContext'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CommentIcon from '@material-ui/icons/Comment'\r\nimport moment from 'moment'\r\nimport {Button} from '@material-ui/core'\r\n\r\nclass Messages extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const currentGroup = this.props.school\r\n        console.log(currentGroup)\r\n        this.convRef = firebase.database()\r\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\r\n        this.messRef = null\r\n\r\n        this.state = {\r\n            conversations: [],\r\n            current: [],\r\n            c: null,\r\n        }\r\n\r\n        this.convRef.on('child_added', this.updateConversation)\r\n        this.convRef.on('child_changed', this.updateConversation)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.convRef.off()\r\n    }\r\n\r\n    updateConversation = (snap) => {\r\n        const conversation = snap.val() || {}\r\n        conversation.$tid = snap.key\r\n\r\n        console.log(conversation)\r\n        if (!conversation.psid) return\r\n\r\n        var isnew = false\r\n        const newConversations = this.state.conversations.map(c => {\r\n            if (c.$tid === conversation.$tid) {\r\n                isnew = true\r\n                return conversation\r\n            }\r\n            return c\r\n        })\r\n        this.setState(({conversations}) => ({\r\n            conversations: !isnew ? [conversation, ...conversations] : newConversations\r\n        }))\r\n    }\r\n\r\n    displayMessage = (c) => () => {\r\n        this.setState({\r\n            c,\r\n        })\r\n        this.messRef = firebase.database()\r\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.school + '/' + c.$tid)\r\n\r\n        this.setState({current: []})\r\n        this.messRef.on('child_added', this.appendToMessageList)\r\n    }\r\n\r\n    appendToMessageList = (snap) => {\r\n        const msg = snap.val()\r\n        this.setState(({current}) => ({\r\n            current: [\r\n                ...current,\r\n                msg,\r\n            ]\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {c, current} = this.state\r\n\r\n        return (\r\n            <div className=\"Messages\">\r\n                <div className={'text-muted'}>Quản lý tin nhắn</div>\r\n                {c ? <div className={'card card-body'}>\r\n                        <div className={'d-flex justify-content-between'}>\r\n                            <Button>\r\n                                {c.name}\r\n                            </Button>\r\n                            <Button onClick={() => {\r\n                                this.messRef.off()\r\n                                this.setState({c: null})\r\n                            }}>\r\n                                Quay lại\r\n                            </Button>\r\n                        </div>\r\n                        <div className={'MessagesWrapper'}>\r\n                            {current.map((m, i) => <div key={i} className={'Message'}>\r\n                                <div className={m.page ? 'Ours' : 'Yours'}>\r\n                                    <div className={'Textt'}>{m.text}</div>\r\n                                </div>\r\n                            </div>)}\r\n                        </div>\r\n                    </div> :\r\n                    <List>\r\n                        {this.state.conversations.map((c, i) => <ListItem key={i}>\r\n                            <ListItemText\r\n                                primary={c.name}\r\n                                secondary={`Tư vấn viên: ${c.answeredBy} - ${c.lastMsg ? 'Tin nhắn cuối: ' + moment(c.lastMsg.time).format('MMMM Do YYYY, h:mm:ss a') : ''} ${c.state < 2 ? ' (Đã kết thúc)' : ''}`}\r\n                            />\r\n\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton aria-label=\"Comments\" onClick={this.displayMessage(c)}>\r\n                                    <CommentIcon/>\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItem>)}\r\n                    </List>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(app) => <Messages\r\n                {...{\r\n                    ...app,\r\n                    ...props,\r\n                }}\r\n            />}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport * as firebase from 'firebase'\r\n\r\nclass EditSchool extends Component {\r\n    state = {\r\n        form: {\r\n            name: '',\r\n            key: '',\r\n            khoi: {\r\n                'tự_nhiên': false,\r\n                'xã_hội': false,\r\n                'lực_lượng_vũ_trang': false,\r\n                'cao_đẳng_nghề': false,\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.open) {\r\n            if (!prevProps.open || prevProps.open.key !== this.props.open.key) {\r\n                this.setState({\r\n                    form: {\r\n                        ...this.state.form,\r\n                        ...this.props.open.school,\r\n                        key: this.props.open.key,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.toggle()\r\n    }\r\n\r\n    handleSave = () => {\r\n        const {form} = this.state\r\n        const {school} = this.props\r\n\r\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\r\n            ...school,\r\n            [form.key]: {\r\n                name: form.name,\r\n                khoi: form.khoi,\r\n            }\r\n        }).then(() => {\r\n            this.setState({\r\n                form: {\r\n                    name: '',\r\n                    key: '',\r\n                    khoi: {\r\n                        'tự_nhiên': false,\r\n                        'xã_hội': false,\r\n                        'lực_lượng_vũ_trang': false,\r\n                        'cao_đẳng_nghề': false,\r\n                    }\r\n                }\r\n            })\r\n            this.props.toggle()\r\n        })\r\n    }\r\n\r\n    changeInput = (key) => (e) => {\r\n        const {value} = e.target\r\n        this.setState(({form}) => ({\r\n            form: {\r\n                ...form,\r\n                [key]: value,\r\n            }\r\n        }))\r\n    }\r\n\r\n    changeCheckbox = (key) => (e) => {\r\n        const {checked} = e.target\r\n        this.setState(({form}) => ({\r\n            form: {\r\n                ...form,\r\n                khoi: {\r\n                    ...form.khoi,\r\n                    [key]: checked\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const {open, toggle} = this.props\r\n        const {form} = this.state\r\n        const {khoi} = form\r\n\r\n        return (\r\n            <div className=\"NewSchool\">\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={toggle}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    maxWidth={'lg'}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"key\"\r\n                            onChange={this.changeInput('key')}\r\n                            label=\"Mã trường\"\r\n                            value={form.key}\r\n                            fullWidth\r\n                            disabled\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            onChange={this.changeInput('name')}\r\n                            value={form.name}\r\n                            label=\"Tên trường\"\r\n                            fullWidth\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['tự_nhiên']}\r\n                                    onChange={this.changeCheckbox('tự_nhiên')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Khối tự nhiên\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['xã_hội']}\r\n                                    onChange={this.changeCheckbox('xã_hội')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Khối xã hội\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['lực_lượng_vũ_trang']}\r\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Khối lực lượng vũ trang\"\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={khoi['cao_đẳng_nghề']}\r\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label=\"Các trường cao đẳng nghề\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Hủy\r\n                        </Button>\r\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\r\n                            Sửa thông tin trường\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditSchool\r\n","import React, { Component } from 'react'\r\nimport AppContext from '../../AppContext'\r\nimport * as firebase from 'firebase'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport NewSchool from './NewSchool'\r\nimport ListSupporters from './ListSupporters'\r\nimport Messages from './Messages'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport EditSchool from './EditSchool'\r\n\r\nfunction xoa_dau(str) {\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n    str = str.replace(/đ/g, \"d\");\r\n    str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\r\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\r\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\r\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\r\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\r\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\r\n    str = str.replace(/Đ/g, \"D\");\r\n    return str;\r\n}\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            school: {},\r\n            addNewSchool: false,\r\n            search: '',\r\n        }\r\n\r\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').once('value').then(snap => {\r\n            var schools = snap.val()\r\n            Object.keys(schools).forEach(code => {\r\n                this.updateSchool(code, schools[code])\r\n            })\r\n        })\r\n    }\r\n\r\n    updateSchool = (code, data) => {\r\n        if (this.props.user.role != 1000\r\n            && code != this.props.user.group) return\r\n        this.setState(({ school }) => ({\r\n            school: {\r\n                ...school,\r\n                [code]: data,\r\n            }\r\n        }))\r\n    }\r\n\r\n    clickSchool = (s) => () => {\r\n        this.setState({\r\n            selectedSchool: s,\r\n            messages: null,\r\n        })\r\n    }\r\n\r\n    clickAllMessages = (s) => () => {\r\n        this.setState({\r\n            selectedSchool: null,\r\n            messages: s,\r\n        })\r\n    }\r\n\r\n    _addNewSchool = () => {\r\n        this.setState({\r\n            addNewSchool: !this.state.addNewSchool,\r\n        })\r\n    }\r\n\r\n    editSchool = (key, school) => () => {\r\n        if (!key || !school) return this.setState({\r\n            editSchool: null\r\n        })\r\n        this.setState({\r\n            editSchool: {\r\n                key, school\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { school, selectedSchool, addNewSchool, messages, editSchool } = this.state\r\n        const { user } = this.props\r\n        const showIfAdmin = {\r\n            'display': user.role == 1000 ? 'inherit' : 'none'\r\n        }\r\n\r\n        return (\r\n            <div className=\"Admin\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" color=\"inherit\">SCS - Admin</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className={'container mt-3'}>\r\n\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this._addNewSchool} style={showIfAdmin}>\r\n                        Thêm trường\r\n                    </Button>\r\n                    <br />\r\n                    <TextField\r\n                        id=\"outlined-name\"\r\n                        label=\"Tìm kiếm theo tên trường\"\r\n                        margin=\"normal\"\r\n                        variant='outlined'\r\n                        fullWidth\r\n                        value={this.state.search}\r\n                        style={showIfAdmin}\r\n                        onChange={(e) => {\r\n                            const { value } = e.target\r\n                            this.setState({ search: value })\r\n                        }}\r\n                    />\r\n                    <NewSchool\r\n                        open={addNewSchool}\r\n                        toggle={this._addNewSchool}\r\n                        school={school}\r\n                        {...this.props}\r\n                    />\r\n                    <EditSchool\r\n                        open={editSchool}\r\n                        toggle={this.editSchool()}\r\n                        school={school}\r\n                        {...this.props}\r\n                    />\r\n                    {selectedSchool ? <div className={'card mt-3'}>\r\n                        <div className={'card-header'}>\r\n\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <Button>\r\n                                    {school[selectedSchool].name}\r\n                                </Button>\r\n                                <Button onClick={() => this.setState({\r\n                                    selectedSchool: null,\r\n                                })}>\r\n                                    Quay lại\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={'card-body'}>\r\n                            <div className=\"text-muted\">Quản lý danh sách tư vấn viên</div>\r\n                            <ListSupporters school={selectedSchool} />\r\n                        </div>\r\n                    </div> : messages ? <div className={'card mt-3'}>\r\n                        <div className={'card-header'}>\r\n\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <Button>\r\n                                    {school[messages].name}\r\n                                </Button>\r\n                                <Button onClick={() => this.setState({\r\n                                    messages: null,\r\n                                })}>\r\n                                    Quay lại\r\n                                    </Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className={'card-body'}>\r\n                            <Messages school={messages} />\r\n                        </div>\r\n                    </div> : <div className='row'>\r\n                                {Object.keys(school).filter(s => {\r\n                                    const sc = school[s]\r\n                                    return xoa_dau(sc.name.toLowerCase()).includes(xoa_dau(this.state.search.toLocaleLowerCase()))\r\n                                }).map((s, i) => <div className='col-12 col-md-6 col-lg-6 col-xl-6' key={i}><div className={'card card-body mt-3 Card'}>\r\n                                    <span\r\n                                        onClick={this.clickSchool(s)}\r\n                                        className={'Cursor'}\r\n                                    >\r\n                                        {school[s].name}\r\n                                    </span>\r\n                                    <Button\r\n                                        onClick={this.clickAllMessages(s)}\r\n                                    >\r\n                                        Xem tin nhắn\r\n                            </Button>\r\n                                    <Button\r\n                                        onClick={this.clickSchool(s)}\r\n                                    >\r\n                                        Quản lý tư vấn viên\r\n                            </Button>\r\n                                    <Button\r\n                                        style={showIfAdmin}\r\n                                        onClick={this.editSchool(s, school[s])}\r\n                                    >\r\n                                        Sửa thông tin trường\r\n                            </Button>\r\n                                </div>\r\n                                </div>)}\r\n                            </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(app) => <Admin\r\n                {...{\r\n                    ...app,\r\n                    ...props,\r\n                }}\r\n            />}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n","import React, {Component} from 'react'\r\nimport AppContext from './AppContext'\r\nimport PropTypes from 'prop-types'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport * as firebase from 'firebase'\r\nimport Register from './containers/register/Register'\r\nimport Init from './containers/init/Init'\r\nimport Supporter from './layouts/supporter/Supporter'\r\nimport Admin from './layouts/admin/Admin'\r\nimport NewUser from './containers/new-user/NewUser'\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n}\r\n\r\nconst DB_PREFIX = process.env.REACT_APP_DB_PREFIX\r\n\r\nconst config = {\r\n    apiKey: 'AIzaSyBxBvZZPxo06HQWHWudRGytuJoSNw5LNX8',\r\n    authDomain: 'localhost',\r\n    databaseURL: 'https://page-tuyen-sinh.firebaseio.com',\r\n    projectId: 'page-tuyen-sinh',\r\n    storageBucket: 'page-tuyen-sinh.appspot.com',\r\n    messagingSenderId: '497060879105'\r\n}\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n        this.state = {\r\n            appState: null,\r\n            DB_PREFIX,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this._doLogin()\r\n    }\r\n\r\n    _doLogin = () => {\r\n        const urlParams = new URLSearchParams(window.location.search)\r\n        const email = urlParams.get('email')\r\n        const password = urlParams.get('password')\r\n\r\n        if (!email) return this.setState({\r\n            appState: 'new_user'\r\n        })\r\n\r\n        this.setState({\r\n            appState: 'loading',\r\n            email,\r\n            password,\r\n        })\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            email, password\r\n        ).then((data) => {\r\n            this.setState({\r\n                uId: data.$uid\r\n            })\r\n            this._getUserInfo(data.user.uid)\r\n        }).catch((error) => {\r\n            if (error.message === 'The password is invalid or the user does not have a password.') return alert('Sai mật khẩu')\r\n            this._doRegister(email, password)\r\n        })\r\n    }\r\n\r\n    _getUserInfo = (uid) => {\r\n        firebase.database().ref(DB_PREFIX + '/users/' + uid).once('value')\r\n            .then(snap => {\r\n                firebase.database().ref(DB_PREFIX + '/groups').once('value').then(gr => {\r\n                    var groups = gr.val()\r\n                    console.log(groups)\r\n                    var userData = snap.val() || {}\r\n                    userData.$uid = uid\r\n                    if (!userData.role) {\r\n                        this.setState({\r\n                            appState: 'register',\r\n                            uid,\r\n                            groups,\r\n                            isLocked: userData.role === 0\r\n                        })\r\n                    } else {\r\n                        const {role} = userData\r\n                        this.setState({\r\n                            appState: role >= 800 ? 'admin' : 'supporter',\r\n                            user: userData,\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    _doRegister = (email, password) => {\r\n        this.setState({\r\n            appState: 'init',\r\n        })\r\n\r\n        return firebase.auth().createUserWithEmailAndPassword(\r\n            email, password\r\n        ).then(() => {\r\n            this._doLogin()\r\n        }).catch((e) => {\r\n            alert('Có lỗi xảy ra, vui lòng báo lại với admin')\r\n        })\r\n    }\r\n\r\n    _register = (user) => {\r\n        const userId = this.state.uid\r\n        return firebase.database().ref(DB_PREFIX + '/users/' + userId).set(\r\n            this.removeTempKeys(user)\r\n            , (err) => {\r\n                if (err) {\r\n                    console.log(err)\r\n                    alert('Có lỗi xảy ra')\r\n                }\r\n                this.setState({\r\n                    isLocked: true\r\n                })\r\n                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\r\n            });\r\n    }\r\n\r\n    _changeState = (changedState) => this.setState(changedState)\r\n\r\n    decodeFirebaseArray = (arr, id_name) => {\r\n        if (!arr || Array.isArray(arr)) return arr;\r\n        return Object.keys(arr).map(function (key) {\r\n            arr[key]['$' + id_name] = key;\r\n            return arr[key];\r\n        });\r\n    }\r\n\r\n    removeTempKeys = (obj) => {\r\n        var nObj = Object.assign({}, obj);\r\n        Object.keys(nObj).forEach(function (key) {\r\n            if (key.startsWith('$')) delete nObj[key];\r\n        });\r\n        return nObj;\r\n    }\r\n\r\n    renderApp = () => {\r\n        const {appState} = this.state\r\n        const combinedProps = {\r\n            ...this.props,\r\n            ...this.state,\r\n        }\r\n        if (appState === 'loading') return <p><center><br/><br/><img src=\"https://raw.githubusercontent.com/manh16nd/chon-truong/master/loading.gif\" /></center></p>\r\n        if (appState === 'init') return <Init/>\r\n        if (appState === 'register') return <Register {...combinedProps}/>\r\n        if (appState === 'supporter') return <Supporter {...combinedProps}/>\r\n        if (appState === 'admin') return <Admin {...combinedProps}/>\r\n        return null\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <AppContext.Provider\r\n                value={{\r\n                    app: this.state,\r\n                    changeState: this._changeState,\r\n                    register: this._register,\r\n                    removeTempKeys: this.removeTempKeys,\r\n                    decodeFirebaseArray: this.decodeFirebaseArray,\r\n                    DB_PREFIX,\r\n                }}\r\n            >\r\n                {this.renderApp()}\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(App)\r\n","import React, {Component} from 'react'\r\nimport * as firebase from 'firebase'\r\nimport AppContext from '../../AppContext'\r\n\r\nclass NewUser extends Component {\r\n    state = {form: {role: 500}, loading: false,}\r\n\r\n    _onChangeInput = (key) => (e) => {\r\n        const {value} = e.target\r\n        this.setState(({form}) => ({\r\n            form: {\r\n                ...form,\r\n                [key]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    _onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            loading: true,\r\n        })\r\n\r\n        const {email, password, repassword} = this.state.form\r\n        if (password !== repassword) return alert('Nhập lại mật khẩu')\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            email, password\r\n        )\r\n            .then(() => {\r\n                return firebase.auth().signInWithEmailAndPassword(email, password)\r\n                    .then(data => {\r\n                        const uId = data.$uid\r\n                        const {password, repassword, ...restUser} = this.state.form\r\n                        return firebase.database().ref(this.props.DB_PREFIX + '/users/' + uId).set(\r\n                            this.props.removeTempKeys(restUser)\r\n                            , (err) => {\r\n                                if (err) {\r\n                                    console.log(err)\r\n                                    alert('Có lỗi xảy ra')\r\n                                }\r\n                                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\r\n                            })\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n            })\r\n            .catch(e => {\r\n                const {code} = e\r\n                if (code === 'auth/email-already-in-use') return alert('Email này đã được sử dụng')\r\n                alert('Có lỗi xảy ra, vui lòng báo lại với admin')\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const {form, loading} = this.state\r\n\r\n        return (\r\n            <div className=\"NewUser mt-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"card card-body Card\">\r\n                        <p className={'text-muted'}>Đăng ký tài khoản</p>\r\n                        <form onSubmit={this._onSubmit}><label htmlFor={'email'}>Email</label>\r\n                            <input\r\n                                className={'form-control'}\r\n                                id={'email'}\r\n                                value={form.email}\r\n                                autoComplete={'false'}\r\n                                onChange={this._onChangeInput('email')}\r\n                            />\r\n                            <label htmlFor={'password'}>Mật khẩu</label>\r\n                            <input\r\n                                className={'form-control'}\r\n                                id={'password'}\r\n                                value={form.password}\r\n                                autoComplete={'false'}\r\n                                onChange={this._onChangeInput('password')}\r\n                                type={'password'}\r\n                            />\r\n                            <label htmlFor={'repassword'}>Nhập lại mật khẩu</label>\r\n                            <input\r\n                                className={'form-control'}\r\n                                id={'repassword'}\r\n                                value={form.repassword}\r\n                                autoComplete={'false'}\r\n                                onChange={this._onChangeInput('repassword')}\r\n                                type={'password'}\r\n                            />\r\n                            <label htmlFor={'name'}>Tên đầy đủ</label>\r\n                            <input\r\n                                className={'form-control'}\r\n                                value={form.name}\r\n                                id={'name'}\r\n                                autoComplete={'off'}\r\n                                onChange={this._onChangeInput('name')}\r\n                            />\r\n                            <label htmlFor={'group'}>Mã trường</label>\r\n                            <input\r\n                                className={'form-control'}\r\n                                value={form.group}\r\n                                id={'group'}\r\n                                onChange={this._onChangeInput('group')}\r\n                                autoComplete={'off'}\r\n                            />\r\n                            <label htmlFor={'desc'}>Lời chào</label>\r\n                            <input\r\n                                className={'form-control'}\r\n                                value={form.desc}\r\n                                id={'desc'}\r\n                                autoComplete={'off'}\r\n                                onChange={this._onChangeInput('desc')}\r\n                            />\r\n                            <button className={'btn btn-primary mt-3'} type={'submit'} disabled={loading}>Đăng ký tài\r\n                                khoản\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function (props) {\r\n    return (\r\n        <AppContext.Consumer>\r\n            {(app) => <NewUser\r\n                {...{\r\n                    ...app,\r\n                    ...props,\r\n                }}\r\n            />}\r\n        </AppContext.Consumer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './scss/index.scss'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}
{"version":3,"sources":["AppContext.js","containers/register/Register.js","containers/init/Init.js","helpers/text.js","layouts/supporter/Supporter.js","layouts/admin/NewSchool.js","layouts/admin/ListSupporters.js","layouts/admin/Messages.js","layouts/admin/EditSchool.js","layouts/admin/Admin.js","App.jsx","index.js"],"names":["React","createContext","Register","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onChangeInput","key","e","value","target","setState","_ref","form","objectSpread","defineProperty","_onSubmit","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","state","email","name","group","length","loading","register","alert","stop","desc","role","_this2","_this$state","blockMsg","display","isLocked","regForm","react_default","createElement","className","style","htmlFor","id","onChange","disabled","autoComplete","groups","keys","map","g","i","placeholder","onClick","Component","register_Register","AppContext","Consumer","app","Register_Register","Init","urlify","text","replace","url","server","process","Supporter","appendToMessageList","snap","msg","val","current","concat","toConsumableArray","updateConversation","userData","user","conversation","$tid","status","newConversations","conversations","filter","c","unshift","sort","b","lastMsg","time","_ref2","onClickConversation","open","messRef","off","firebase","ref","DB_PREFIX","orderByKey","limitToLast","on","preventDefault","t","currentUser","getIdToken","then","idToken","axios","post","tid","resp","data","error","catch","err","message","toggle","dropdown","out","window","confirm","ok","location","reload","greet","console","log","renderMessage","startsWith","image_urls","split","shift","image","backgroundImage","backgroundSize","dangerouslySetInnerHTML","__html","renderConversation","m","page","onSubmit","width","ButtonDropdown","isOpen","DropdownToggle","color","DropdownMenu","DropdownItem","type","Icon_default","editUser","changeInput","_ref3","handleSaveUser","$uid","set","removeTempKeys","currentGroup","convRef","orderByChild","startAt","endAt","messagesEnd","createRef","prevProps","prevState","snapshot","animateScroll","scrollToBottom","containerId","_this$state2","bgRead","background-color","bgUnread","AppBar_default","position","background","Toolbar_default","Typography_default","variant","Button_default","substring","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","margin","fullWidth","DialogActions_default","supporter_Supporter","Supporter_Supporter","NewSchool","khoi","tự_nhiên","xã_hội","lực_lượng_vũ_trang","cao_đẳng_nghề","handleClose","handleSave","school","changeCheckbox","checked","_this$props","maxWidth","label","FormControlLabel_default","control","Checkbox_default","ListSupporters","updateUsers","users","decodeFirebaseArray","changeRadio","Number","equalTo","List_default","dense","ListItem_default","ListItemIcon_default","AccountCircle_default","ListItemText_default","primary","ListItemSecondaryAction_default","IconButton_default","aria-label","Create_default","RadioGroup_default","Radio_default","admin_ListSupporters","ListSupporters_ListSupporters","Messages","psid","isnew","displayMessage","sendMessage","index_es","secondary","answeredBy","moment","format","Comment_default","admin_Messages","Messages_Messages","EditSchool","xoa_dau","str","Admin","updateSchool","code","clickSchool","s","selectedSchool","messages","clickAllMessages","_addNewSchool","addNewSchool","editSchool","search","schools","forEach","showIfAdmin","admin_NewSchool","assign","admin_EditSchool","toLowerCase","includes","toLocaleLowerCase","admin_Admin","Admin_Admin","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","_doLogin","urlParams","URLSearchParams","get","password","appState","signInWithEmailAndPassword","uId","_getUserInfo","uid","_doRegister","once","gr","createUserWithEmailAndPassword","_register","userId","_changeState","changedState","arr","id_name","Array","isArray","obj","nObj","renderApp","combinedProps","src","alt","init_Init","Provider","changeState","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","ReactDOM","render","react_router_dom","src_App","document","getElementById"],"mappings":"kPAEeA,MAAMC,cAAc,uDCC7BC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaVQ,eAAiB,SAACC,GAAD,OAAS,SAACC,GAAM,IACtBC,EAASD,EAAEE,OAAXD,MAEPV,EAAKY,SAAS,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,MAAa,CACvBA,KAAKb,OAAAc,EAAA,EAAAd,CAAA,GACEa,EADHb,OAAAe,EAAA,EAAAf,CAAA,GAECO,EAAME,SApBAV,EAyBnBiB,UAzBmBhB,OAAAiB,EAAA,EAAAjB,CAAAkB,EAAAC,EAAAC,KAyBP,SAAAC,IAAA,IAAAR,EAAA,OAAAK,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACDZ,EAAQd,EAAK2B,MAAbb,MACEc,OAASd,EAAKe,MAAQf,EAAKgB,OAAShB,EAAKe,KAAKE,OAAS,IAFxD,CAAAP,EAAAE,KAAA,eAGJ1B,EAAKY,SAAS,CACVoB,SAAS,IAJTR,EAAAE,KAAA,EAME1B,EAAKD,MAAMkC,SAASnB,GANtB,OAOJd,EAAKY,SAAS,CACVoB,SAAS,IARTR,EAAAE,KAAA,eAWJQ,MAAM,sEAXF,wBAAAV,EAAAW,SAAAb,MAtBRtB,EAAK2B,MAAQ,CACTb,KAAM,CACFc,MAAO5B,EAAKD,MAAM6B,OAAS,GAC3BC,KAAM,GACNC,MAAO,GACPM,KAAM,GACNC,KAAM,IATCrC,wEAwCV,IAAAsC,EAAAnC,KAAAoC,EACmBpC,KAAKwB,MAAtBb,EADFyB,EACEzB,KAAMkB,EADRO,EACQP,QACTQ,EAAW,CACpBC,QAAStC,KAAKJ,MAAM2C,SAAW,OAAS,QAGrCC,EAAU,CACbF,QAAStC,KAAKJ,MAAM2C,SAAW,OAAS,QAGnC,OACIE,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,YACXF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,aACXF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,sBAAsBC,MAAOP,GAA5C,uFAC0CI,EAAAxB,EAAAyB,cAAA,WAD1C,0FAGAD,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,sBAAsBC,MAAOJ,GACxCC,EAAAxB,EAAAyB,cAAA,SAAOC,UAAW,cAAlB,mHAA8FF,EAAAxB,EAAAyB,cAAA,WAC9FD,EAAAxB,EAAAyB,cAAA,SAAOG,QAAS,SAAhB,SACAJ,EAAAxB,EAAAyB,cAAA,SACIC,UAAW,eACXG,GAAI,QACJvC,MAAOI,EAAKc,MACZsB,SAAU/C,KAAKI,eAAe,SAC9B4C,UAAQ,IAEZP,EAAAxB,EAAAyB,cAAA,SAAOG,QAAS,QAAhB,qCACAJ,EAAAxB,EAAAyB,cAAA,SACIC,UAAW,eACXpC,MAAOI,EAAKe,KACZoB,GAAI,OACJG,aAAc,MACdF,SAAU/C,KAAKI,eAAe,UAElCqC,EAAAxB,EAAAyB,cAAA,SAAOG,QAAS,SAAhB,0BACAJ,EAAAxB,EAAAyB,cAAA,UACIC,UAAU,gBACVpC,MAAOI,EAAKgB,MACZmB,GAAI,QACJC,SAAU/C,KAAKI,eAAe,UAE9BqC,EAAAxB,EAAAyB,cAAA,qDACC1C,KAAKJ,MAAMsD,QAAUpD,OAAOqD,KAAKnD,KAAKJ,MAAMsD,QAAQE,IAAI,SAACC,EAAGC,GAAJ,OAAUb,EAAAxB,EAAAyB,cAAA,UAC/DrC,IAAKiD,EACL/C,MAAO8C,GAENlB,EAAKvC,MAAMsD,OAAOG,GAAG3B,SAI9Be,EAAAxB,EAAAyB,cAAA,SAAOG,QAAS,QAAhB,kLACAJ,EAAAxB,EAAAyB,cAAA,SACIC,UAAW,eACXpC,MAAOI,EAAKsB,KACZsB,YAAY,uGACZT,GAAI,OACJG,aAAc,MACdF,SAAU/C,KAAKI,eAAe,UAElCqC,EAAAxB,EAAAyB,cAAA,UAAQC,UAAW,uBAAwBa,QAASxD,KAAKc,UAAWkC,SAAUnB,GAA9E,kCApGD4B,aA4GRC,EAAA,SAAU9D,GACrB,OACI6C,EAAAxB,EAAAyB,cAACiB,EAAWC,SAAZ,KACK,SAACC,GAAD,OAASpB,EAAAxB,EAAAyB,cAACoB,EAADhE,OAAAc,EAAA,EAAAd,CAAA,GAEC+D,EACAjE,OCrGRmE,mLAZP,OACItB,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,YACXF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,aACXF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,uBACXF,EAAAxB,EAAAyB,cAAA,SAAOC,UAAW,cAAlB,iEANLc,8PCFNO,EAAS,SAACC,GAEnB,OAAOA,EAAKC,QADG,uBACe,SAAUC,GACpC,MAAO,4BAA8BA,EAAM,KAAOA,EAAM,UCkB1DC,EAASC,2BAETC,cACF,SAAAA,EAAY1E,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACfzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,KA+BV2E,oBAAsB,SAACC,GACnB,IAAMC,EAAMD,EAAKE,MACjB7E,EAAKY,SAAS,SAAAC,GAAA,IAAEiE,EAAFjE,EAAEiE,QAAF,MAAgB,CAC1BA,QAAO,GAAAC,OAAA9E,OAAA+E,EAAA,EAAA/E,CACA6E,GADA,CAEHF,QArCO5E,EA0CnBiF,mBAAqB,SAACN,GAClB,IAAMO,EAAWlF,EAAKD,MAAMoF,KACtBC,EAAeT,EAAKE,OAAS,GAGnC,GAFAO,EAAaC,KAAOV,EAAKnE,KAEG,IAAxB4E,EAAaE,QAAwC,IAAxBF,EAAaE,SAC1CF,EAAatD,QAAUoD,EAASpD,MAApC,CAGA,IAAMyD,EAAmBvF,EAAK2B,MAAM6D,cAAcC,OAAO,SAAAC,GACrD,OAAOA,EAAEL,OAASD,EAAaC,OAGnCE,EAAiBI,QAAQP,GAEzBG,EAAiBK,KAAK,SAACxE,EAAGyE,GACtB,OAAKzE,EAAE0E,SAAYD,EAAEC,QACjB1E,EAAE0E,QAAQC,KAAOF,EAAEC,QAAQC,MACnB,EACD3E,EAAE0E,QAAQC,KAAOF,EAAEC,QAAQC,KAC3B,EAEJ,EAN8B,IASzC/F,EAAKY,SAAS,SAAAoF,KAAER,cAAF,MAAsB,CAChCA,cAAeD,OApEJvF,EAwEnBiG,oBAAsB,SAACP,GAAD,OAAO,WACzB,GAAI1F,EAAK2B,MAAMuE,MAAQlG,EAAK2B,MAAMuE,KAAKb,OAASK,EAAEL,KAO9C,OANArF,EAAKY,SAAS,CACVsF,KAAM,KACNpB,QAAS,GACTV,KAAM,UAENpE,EAAKmG,SAASnG,EAAKmG,QAAQC,IAAI,cAAepG,EAAK0E,sBAI3D1E,EAAKY,SAAS,CACVsF,KAAMR,EACNZ,QAAS,GACTV,KAAM,KAGVpE,EAAKmG,QAAUE,aACVC,IAAItG,EAAKD,MAAMwG,UAAY,sBAAwBvG,EAAKD,MAAMoF,KAAKrD,MAAQ,IAAM4D,EAAEL,MACnFmB,aACAC,YAAY,IAEjBzG,EAAKmG,QAAQO,GAAG,cAAe1G,EAAK0E,uBA9FrB1E,EAiGnBiB,UAAY,SAACyE,GAAD,OAAO,SAACjF,GAEhB,GADAA,EAAEkG,iBACE3G,EAAK2B,MAAMyC,KAAM,CACjB,IAAMwC,EAAI5G,EAAK2B,MAAMyC,KAIrB,OAHApE,EAAKY,SAAS,CACVwD,KAAM,KAEHiC,SAAgBQ,YAAYC,YAAW,GAAMC,KAAK,SAACC,GACtDC,IAAMC,KAAN,WAAAnC,OAAsBR,EAAtB,mCAA+D,CAC3DyC,UACAG,IAAKzB,EAAEL,KACPjB,KAAMwC,IAELG,KAAK,SAAAK,GAAQ,IACHC,EAAQD,EAARC,KACP,GAAIA,EAAKC,MAAO,OAAOpF,MAAMmF,EAAKC,SAErCC,MAAM,SAAAC,GAAG,OAAItF,MAAMsF,EAAIC,SAAWD,OAEtCD,MAAM,SAAA9G,GAAC,OAAIyB,MAAMzB,EAAEgH,SAAWhH,QApHxBT,EAwHnB0H,OAAS,WACL1H,EAAKY,SAAS,CACV+G,UAAW3H,EAAK2B,MAAMgG,YA1HX3H,EA8HnB4H,IAAM,WACGC,OAAOC,QAAQ,uGACpBzB,SAAgBQ,YAAYC,YAAW,GAAMC,KAAK,SAACC,GAC/C,OAAOC,IAAMC,KAAN,WAAAnC,OAAsBR,EAAtB,mCAA+D,CAClEyC,UACAG,IAAOnH,EAAK2B,MAAMuE,KAAKb,OAEtB0B,KAAK,SAAAgB,GACFF,OAAOG,SAASC,WAEnBV,MAAM,SAAAC,GAAG,OAAItF,MAAMsF,QAxIbxH,EA4InBkI,MAAQ,WACJ,OAAO7B,SAAgBQ,YAAYC,YAAW,GAAMC,KAAK,SAACC,GACtD,IAAMtB,EAAI1F,EAAK2B,MAAMuE,KACrBiC,QAAQC,IAAI,OAEZnB,IAAMC,KAAN,GAAAnC,OAAcP,2BAAd,mCAA6E,CACzEwC,UACAG,IAAKzB,EAAEL,KACPjB,KAAMpE,EAAKD,MAAMoF,KAAK/C,OAErB2E,KAAK,SAAAK,GAAQ,IACHC,EAAQD,EAARC,KACP,GAAIA,EAAKC,MAAO,OAAOpF,MAAMmF,EAAKC,SAErCC,MAAM,SAAAC,GAAG,OAAItF,MAAMsF,EAAIC,SAAWD,OAEtCD,MAAM,SAAA9G,GAAC,OAAIyB,MAAMzB,EAAEgH,SAAWhH,MA5JpBT,EA+JnBqI,cAAgB,SAACZ,GACb,GAAIA,EAAQa,WAAW,UAAW,CAC9B,IAAMC,EAAad,EAAQe,MAAM,KAEjC,OADAD,EAAWE,QACJ7F,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,gBAAiByF,EAAWhF,IAAI,SAACmF,EAAOjF,GAAR,OAAcb,EAAAxB,EAAAyB,cAAA,OACjErC,IAAKiD,EACLX,UAAU,eACVC,MAAO,CACH4F,gBAAe,OAAA5D,OAAS2D,EAAT,KACfE,eAAgB,SAEpBjF,QAAS,kBAAMkE,OAAO3B,KAAKwC,EAAO,gBAI1C,OAAO9F,EAAAxB,EAAAyB,cAAA,OAAKgG,wBAAyB,CAACC,OAAQ3E,EAAOsD,OA9KtCzH,EAiLnB+I,mBAAqB,WAAM,IAAAxG,EACWvC,EAAK2B,MAAhCmD,EADgBvC,EAChBuC,QAASoB,EADO3D,EACP2D,KAAMyB,EADCpF,EACDoF,SAEtB,OAAO/E,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,kBACnBF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,oBAAqBa,QAAS3D,EAAKiG,oBAAoBC,IAAOtD,EAAAxB,EAAAyB,cAAA,kCAA9E,MACgB7C,EAAK2B,MAAMuE,KAAKrE,MAChCe,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,kBAAkBG,GAAI,YAChC6B,EAAQvB,IAAI,SAACyF,EAAGvF,GAAJ,OAAUb,EAAAxB,EAAAyB,cAAA,OAAKrC,IAAKiD,EAAGX,UAAW,WAC3CF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAWkG,EAAEC,KAAO,OAAS,SAC9BrG,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,SAAU9C,EAAKqI,cAAcW,EAAE5E,YAI3DxB,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,QACZF,EAAAxB,EAAAyB,cAAA,QAAMC,UAAW,cAAeoG,SAAUlJ,EAAKiB,UAAUiF,IACrDtD,EAAAxB,EAAAyB,cAAA,OAAKE,MAAO,CACRoG,MAAO,QAEPvG,EAAAxB,EAAAyB,cAAEuG,EAAA,EAAF,CAAiBC,OAAQ1B,EAAUD,OAAQ1H,EAAK0H,OAAQ3E,MAAO,CAACoG,MAAO,QACnEvG,EAAAxB,EAAAyB,cAACyG,EAAA,EAAD,CAAgBC,MAAO,WAAW3G,EAAAxB,EAAAyB,cAAA,KAAGC,UAAU,iBAE/CF,EAAAxB,EAAAyB,cAAC2G,EAAA,EAAD,KACI5G,EAAAxB,EAAAyB,cAAC4G,EAAA,EAAD,CAAc9F,QAAS3D,EAAKkI,OAA5B,sCAGAtF,EAAAxB,EAAAyB,cAAC4G,EAAA,EAAD,CAAc9F,QAAS3D,EAAK4H,KAA5B,4BAMZhF,EAAAxB,EAAAyB,cAAA,SAAOC,UAAW,eAAgBY,YAAa,yBAAgBhD,MAAOV,EAAK2B,MAAMyC,KAC1ElB,SAAU,SAAAzC,GAAC,OAAIT,EAAKY,SAAS,CAACwD,KAAM3D,EAAEE,OAAOD,WACpDkC,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,YACZF,EAAAxB,EAAAyB,cAAA,UAAQ6G,KAAM,SAAU3G,MAAO,CAACwG,MAAO,SACnC3G,EAAAxB,EAAAyB,cAAC8G,EAAAvI,EAAD,mBApNLpB,EA6NnB4J,SAAW,SAACzE,GAAD,OAAU,WACjBnF,EAAKY,SAAS,CACVgJ,SAAUzE,EAAIlF,OAAAc,EAAA,EAAAd,CAAA,GAAOkF,GAAQ,SA/NlBnF,EAmOnB6J,YAAc,SAACrJ,GAAD,OAAS,SAACC,GAAM,IACnBC,EAASD,EAAEE,OAAXD,MAEPV,EAAKY,SAAS,SAAAkJ,GAAA,IAAEF,EAAFE,EAAEF,SAAF,MAAiB,CAC3BA,SAAS3J,OAAAc,EAAA,EAAAd,CAAA,GACF2J,EADC3J,OAAAe,EAAA,EAAAf,CAAA,GAEHO,EAAME,SAzOAV,EA8OnB+J,eAAiB,WAAM,IACZH,EAAY5J,EAAK2B,MAAjBiI,SACPvD,aAAoBC,IAAItG,EAAKD,MAAMwG,UAAY,UAAYqD,EAASI,MAAMC,IACtEjK,EAAKD,MAAMmK,eAAeN,GACxB,SAACpC,GACC,IAAKA,EAED,OADAW,QAAQC,IAAI,KACLpI,EAAK4J,UAAL5J,GAEXkC,MAAMsF,MArPd,IAAM2C,EAAenK,EAAKD,MAAMoF,KAAKrD,MAFtB,OAIf9B,EAAKoK,QAAU/D,aACVC,IAAItG,EAAKD,MAAMwG,UAAY,wBAA0B4D,GACrDE,aAAa,UACbC,QAAQ,GACRC,MAAM,GACXvK,EAAKmG,QAAU,KAEfnG,EAAKoK,QAAQ1D,GAAG,cAAe1G,EAAKiF,oBACpCjF,EAAKoK,QAAQ1D,GAAG,gBAAiB1G,EAAKiF,oBACtCjF,EAAKwK,YAAc5K,IAAM6K,YAEzBzK,EAAK2B,MAAQ,CACT6D,cAAe,GACfU,KAAM,KACNpB,QAAS,GACTV,KAAM,GACNuD,UAAU,GApBC3H,kFAwBA0K,EAAWC,EAAWC,GACjCD,EAAU7F,QAAQ/C,SAAW5B,KAAKwB,MAAMmD,QAAQ/C,QAChD8I,gBAAcC,eAAe,CACzBC,YAAa,8CAgOhB,IAAAzI,EAAAnC,KACEgF,EAAQhF,KAAKJ,MAAboF,KADF6F,EAEmC7K,KAAKwB,MAAtC6D,EAFFwF,EAEExF,cAAeU,EAFjB8E,EAEiB9E,KAAM0D,EAFvBoB,EAEuBpB,SACtBqB,EAAS,CAACC,mBAAoB,QAC9BC,EAAW,CAACD,mBAAoB,QAEtC,OACItI,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,aACZF,EAAAxB,EAAAyB,cAACuI,EAAAhK,EAAD,CAAQiK,SAAS,SAAStI,MAAO,CAACuI,WAAY,YAC1C1I,EAAAxB,EAAAyB,cAAC0I,EAAAnK,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC2I,EAAApK,EAAD,CAAYqK,QAAQ,KAAKlC,MAAM,WAA/B,oBAGR3G,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,kBACZF,EAAAxB,EAAAyB,cAAA,QAAMC,UAAU,cAAhB,gBACAF,EAAAxB,EAAAyB,cAAA,QAAMC,UAAW,oBAAjB,IAAuCqC,EAAKtD,MAC5Ce,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAASxD,KAAKyJ,SAASzE,GAAOoE,MAAM,WAA5C,6BAECrD,EAAO/F,KAAK4I,qBACTvD,EAAcjC,IAAI,SAACmC,EAAGjC,GAAJ,OAAUb,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,2BAA4BtC,IAAKiD,EAC5CE,QAASrB,EAAK2D,oBAAoBP,GAClC3C,MAAoB,IAAb2C,EAAEJ,OAAe2F,EAASE,GAChD,IAAbzF,EAAEJ,OACG1C,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,SAASF,EAAAxB,EAAAyB,cAAA,SAAI6C,EAAE7D,OAC/Be,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,SAAU4C,EAAE7D,MAElCe,EAAAxB,EAAAyB,cAAA,OACIC,UAAW,2BAA4B4C,EAAEI,QAAQ1B,KAAKuH,UAAU,EAAG,KAAMjG,EAAEI,QAAQ1B,KAAKrC,OAAS,IAAM,GAAK,WAI5Ha,EAAAxB,EAAAyB,cAAC+I,EAAAxK,EAAD,CACI8E,KAAM0D,EACNiC,QAAS1L,KAAKyJ,SAAS,MACvBkC,kBAAgB,qBAChBlJ,EAAAxB,EAAAyB,cAACkJ,EAAA3K,EAAD,CAAa6B,GAAG,qBAAhB,6BACAL,EAAAxB,EAAAyB,cAACmJ,EAAA5K,EAAD,KACIwB,EAAAxB,EAAAyB,cAAA,uMAEAD,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI8K,WAAS,EACTC,OAAO,QACPlJ,GAAG,OACHC,SAAU/C,KAAK0J,YAAY,QAC3BnG,YAAY,uGACZhD,MAAOkJ,EAAWA,EAASxH,KAAO,GAClCgK,WAAS,KAGjBxJ,EAAAxB,EAAAyB,cAACwJ,EAAAjL,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAASxD,KAAKyJ,SAAS,MAAOL,MAAM,WAA5C,YAGA3G,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQqK,QAAQ,YAAY9H,QAASxD,KAAK4J,eAAgBR,MAAM,WAAhE,mCAjTA3F,aA2TT0I,GAAA,SAAUvM,GACrB,OACI6C,EAAAxB,EAAAyB,cAACiB,EAAWC,SAAZ,KACK,SAACC,GAAD,OAASpB,EAAAxB,EAAAyB,cAAC0J,EAADtM,OAAAc,EAAA,EAAAd,CAAA,GAEC+D,EACAjE,+CClLRyM,8MAzJX7K,MAAQ,CACJb,KAAM,CACFe,KAAM,GACNrB,IAAK,GACLiM,KAAM,CACFC,oBAAY,EACZC,kBAAU,EACVC,0CAAsB,EACtBC,gCAAiB,OAK7BC,YAAc,WACV9M,EAAKD,MAAM2H,YAGfqF,WAAa,WAAM,IACRjM,EAAQd,EAAK2B,MAAbb,KACUd,EAAKD,MAAfiN,OACIlM,EAAKN,MAAM0B,MAAM,4CAC5BmE,aAAoBC,IAAItG,EAAKD,MAAMwG,UAAY,WAAazF,EAAKN,KAAKyJ,IAClE,CACIpI,KAAMf,EAAKe,KACX4K,KAAM3L,EAAK2L,OAEjB1F,KAAK,WACH/G,EAAKY,SAAS,CACVE,KAAM,CACFe,KAAM,GACNrB,IAAK,GACLiM,KAAM,CACFC,oBAAY,EACZC,kBAAU,EACVC,0CAAsB,EACtBC,gCAAiB,MAI7B7M,EAAKD,MAAM2H,cAInBmC,YAAc,SAACrJ,GAAD,OAAS,SAACC,GAAM,IACnBC,EAASD,EAAEE,OAAXD,MACPV,EAAKY,SAAS,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,MAAa,CACvBA,KAAKb,OAAAc,EAAA,EAAAd,CAAA,GACEa,EADHb,OAAAe,EAAA,EAAAf,CAAA,GAECO,EAAME,WAKnBuM,eAAiB,SAACzM,GAAD,OAAS,SAACC,GAAM,IACtByM,EAAWzM,EAAEE,OAAbuM,QACPlN,EAAKY,SAAS,SAAAoF,GAAA,IAAElF,EAAFkF,EAAElF,KAAF,MAAa,CACvBA,KAAKb,OAAAc,EAAA,EAAAd,CAAA,GACEa,EADH,CAEA2L,KAAKxM,OAAAc,EAAA,EAAAd,CAAA,GACEa,EAAK2L,KADRxM,OAAAe,EAAA,EAAAf,CAAA,GAECO,EAAM0M,mFAMd,IAAAC,EACkBhN,KAAKJ,MAArBmG,EADFiH,EACEjH,KAAMwB,EADRyF,EACQzF,OACN5G,EAAQX,KAAKwB,MAAbb,KACA2L,EAAQ3L,EAAR2L,KAEP,OACI7J,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,aACXF,EAAAxB,EAAAyB,cAAC+I,EAAAxK,EAAD,CACI8E,KAAMA,EACN2F,QAASnE,EACToE,kBAAgB,oBAChBsB,SAAU,MAEVxK,EAAAxB,EAAAyB,cAACkJ,EAAA3K,EAAD,CAAa6B,GAAG,qBAAhB,qCACAL,EAAAxB,EAAAyB,cAACmJ,EAAA5K,EAAD,KACIwB,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI8K,WAAS,EACTC,OAAO,QACPlJ,GAAG,MACHC,SAAU/C,KAAK0J,YAAY,OAC3BwD,MAAM,yBACN3M,MAAOI,EAAKN,IACZ4L,WAAS,IAEbxJ,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI+K,OAAO,QACPlJ,GAAG,OACHC,SAAU/C,KAAK0J,YAAY,QAC3BnJ,MAAOI,EAAKe,KACZwL,MAAM,0BACNjB,WAAS,IAEbxJ,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,oBACdvJ,SAAU/C,KAAK8M,eAAe,oBAC9B1D,MAAM,YAGd8D,MAAM,+BAEVzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,kBACdvJ,SAAU/C,KAAK8M,eAAe,kBAC9B1D,MAAM,YAGd8D,MAAM,6BAEVzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,0CACdvJ,SAAU/C,KAAK8M,eAAe,0CAC9B1D,MAAM,YAGd8D,MAAM,qDAEVzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,gCACdvJ,SAAU/C,KAAK8M,eAAe,gCAC9B1D,MAAM,YAGd8D,MAAM,0DAGdzK,EAAAxB,EAAAyB,cAACwJ,EAAAjL,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAASxD,KAAK2M,YAAavD,MAAM,WAAzC,YAGA3G,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQqK,QAAQ,YAAY9H,QAASxD,KAAK4M,WAAYxD,MAAM,WAA5D,sCAhJA3F,yNCUlB6J,eACF,SAAAA,EAAY1N,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsN,IACfzN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwN,GAAAnN,KAAAH,KAAMJ,KAcV2N,YAAc,SAAC/I,GACX3E,EAAKY,SAAS,CACV+M,MAAO3N,EAAKD,MAAM6N,oBAAoBjJ,EAAKE,OAAS,GAAI,UAjB7C7E,EAqBnB4J,SAAW,SAACzE,GAAD,OAAU,WACjBnF,EAAKY,SAAS,CACVgJ,SAAUzE,EAAIlF,OAAAc,EAAA,EAAAd,CAAA,GAAOkF,GAAQ,SAvBlBnF,EA2BnB6J,YAAc,SAACrJ,GAAD,OAAS,SAACC,GAAM,IACnBC,EAASD,EAAEE,OAAXD,MAEPV,EAAKY,SAAS,SAAAC,GAAA,IAAE+I,EAAF/I,EAAE+I,SAAF,MAAiB,CAC3BA,SAAS3J,OAAAc,EAAA,EAAAd,CAAA,GACF2J,EADC3J,OAAAe,EAAA,EAAAf,CAAA,GAEHO,EAAME,SAjCAV,EAsCnB6N,YAAc,SAACrN,GAAD,OAAS,SAACC,GAAM,IACnBC,EAASD,EAAEE,OAAXD,MAEPV,EAAKY,SAAS,SAAAoF,GAAA,IAAE4D,EAAF5D,EAAE4D,SAAF,MAAiB,CAC3BA,SAAS3J,OAAAc,EAAA,EAAAd,CAAA,GACF2J,EADC3J,OAAAe,EAAA,EAAAf,CAAA,GAEHO,EAAMsN,OAAOpN,UA5CPV,EAiDnB+M,WAAa,WAAM,IACRnD,EAAY5J,EAAK2B,MAAjBiI,SACPvD,aAAoBC,IAAItG,EAAKD,MAAMwG,UAAY,UAAYqD,EAASI,MAAMC,IACtEjK,EAAKD,MAAMmK,eAAeN,GACxB,SAACpC,GACC,IAAKA,EAED,OADAW,QAAQC,IAAI,KACLpI,EAAK4J,UAAL5J,GAEXkC,MAAMsF,MAxDdxH,EAAK2B,MAAQ,CACTgM,MAAO,IAEX3N,EAAKsG,IAAMD,aAAoBC,IAAItG,EAAKD,MAAMwG,UAAY,UACrD8D,aAAa,SACb0D,QAAQ/N,EAAKD,MAAMiN,QACxBhN,EAAKsG,IAAII,GAAG,QAAS,SAAA/B,GAAI,OAAI3E,EAAK0N,YAAY/I,KAR/B3E,sFAYfG,KAAKmG,IAAIF,uCAkDJ,IAAA9D,EAAAnC,KAAAoC,EACqBpC,KAAKwB,MAAxBgM,EADFpL,EACEoL,MAAO/D,EADTrH,EACSqH,SAEd,OACIhH,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,kBACXF,EAAAxB,EAAAyB,cAACmL,GAAA5M,EAAD,CAAM6M,OAAO,KACNN,IAAUA,EAAM5L,SACnBa,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,iCACXF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,cAAhB,sFAEH6K,EAAMpK,IAAI,SAAC4B,EAAM1B,GAAP,OAAab,EAAAxB,EAAAyB,cAACqL,GAAA9M,EAAD,CAAUZ,IAAKiD,GACnCb,EAAAxB,EAAAyB,cAACsL,GAAA/M,EAAD,KACIwB,EAAAxB,EAAAyB,cAACuL,GAAAhN,EAAD,OAEJwB,EAAAxB,EAAAyB,cAACwL,GAAAjN,EAAD,CACIkN,QAASnJ,EAAK9C,KAAO8C,EAAKtD,KACtBe,EAAAxB,EAAAyB,cAAA,YAAOsC,EAAKtD,KAAZ,MAAoBe,EAAAxB,EAAAyB,cAAA,QAAMC,UAAW,cAAjB,kCAE5BF,EAAAxB,EAAAyB,cAAC0L,GAAAnN,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC2L,GAAApN,EAAD,CAAYqN,aAAW,SAAS9K,QAASrB,EAAKsH,SAASzE,IACnDvC,EAAAxB,EAAAyB,cAAC6L,GAAAtN,EAAD,YAKhBwB,EAAAxB,EAAAyB,cAAC+I,EAAAxK,EAAD,CACI8E,KAAM0D,EACNiC,QAAS1L,KAAKyJ,SAAS,MACvBkC,kBAAgB,qBAEhBlJ,EAAAxB,EAAAyB,cAACkJ,EAAA3K,EAAD,CAAa6B,GAAG,qBAAhB,kDACAL,EAAAxB,EAAAyB,cAACmJ,EAAA5K,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC8L,GAAAvN,EAAD,CACIqN,aAAY,OACZvL,SAAU/C,KAAK0N,YAAY,QAC3BnN,MAAOkJ,EAAWA,EAASvH,KAAO,MAElCO,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CAAkBV,MAAO,IAAK6M,QAAS3K,EAAAxB,EAAAyB,cAAC+L,GAAAxN,EAAD,CACnCmI,MAAO,YAAc8D,MAAM,6BAC/BzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CAAkBV,MAAO,IAAK6M,QAAS3K,EAAAxB,EAAAyB,cAAC+L,GAAAxN,EAAD,CACnCmI,MAAO,YAAc8D,MAAM,6BAC/BzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CAAkBV,MAAO,EAAG6M,QAAS3K,EAAAxB,EAAAyB,cAAC+L,GAAAxN,EAAD,CACjCmI,MAAO,YAAc8D,MAAM,gCAEnCzK,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI8K,WAAS,EACTC,OAAO,QACPlJ,GAAG,QACHC,SAAU/C,KAAK0J,YAAY,SAC3BwD,MAAM,QACN3M,MAAOkJ,EAAWA,EAAShI,MAAQ,GACnC8H,KAAM,QACN0C,WAAS,IAEbxJ,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI8K,WAAS,EACTC,OAAO,QACPlJ,GAAG,OACHC,SAAU/C,KAAK0J,YAAY,QAC3BwD,MAAM,oCACN3M,MAAOkJ,EAAWA,EAAS/H,KAAO,GAClCuK,WAAS,IAEbxJ,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI8K,WAAS,EACTC,OAAO,QACPlJ,GAAG,OACHC,SAAU/C,KAAK0J,YAAY,QAC3BwD,MAAM,+BACN3M,MAAOkJ,EAAWA,EAASxH,KAAO,GAClCgK,WAAS,KAGjBxJ,EAAAxB,EAAAyB,cAACwJ,EAAAjL,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAASxD,KAAKyJ,SAAS,MAAOL,MAAM,WAA5C,YAGA3G,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQqK,QAAQ,YAAY9H,QAASxD,KAAK4M,WAAYxD,MAAM,WAA5D,mCA5IK3F,aAsJdiL,GAAA,SAAU9O,GACrB,OACI6C,EAAAxB,EAAAyB,cAACiB,EAAWC,SAAZ,KACK,SAACC,GAAD,OAASpB,EAAAxB,EAAAyB,cAACiM,GAAD7O,OAAAc,EAAA,EAAAd,CAAA,GAEC+D,EACAjE,2DCrKjBwE,GAASC,2BAETuK,eACF,SAAAA,EAAYhP,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4O,IACf/O,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8O,GAAAzO,KAAAH,KAAMJ,KAsBVkF,mBAAqB,SAACN,GAClB,IAAMS,EAAeT,EAAKE,OAAS,GAInC,GAHAO,EAAaC,KAAOV,EAAKnE,IAEzB2H,QAAQC,IAAIhD,GACPA,EAAa4J,KAAlB,CAEA,IAAIC,GAAQ,EACN1J,EAAmBvF,EAAK2B,MAAM6D,cAAcjC,IAAI,SAAAmC,GAClD,OAAIA,EAAEL,OAASD,EAAaC,MACxB4J,GAAQ,EACD7J,GAEJM,IAEX1F,EAAKY,SAAS,SAAAC,GAAA,IAAE2E,EAAF3E,EAAE2E,cAAF,MAAsB,CAChCA,cAAgByJ,EAA2C1J,EAA5C,CAAUH,GAAVL,OAAA9E,OAAA+E,EAAA,EAAA/E,CAA2BuF,SAvC/BxF,EA2CnBkP,eAAiB,SAACxJ,GAAD,OAAO,WACpB1F,EAAKY,SAAS,CACV8E,MAEJ1F,EAAKmG,QAAUE,aACVC,IAAItG,EAAKD,MAAMwG,UAAY,sBAAwBvG,EAAKD,MAAMiN,OAAS,IAAMtH,EAAEL,MAEpFrF,EAAKY,SAAS,CAACkE,QAAS,KACxB9E,EAAKmG,QAAQO,GAAG,cAAe1G,EAAK0E,uBAnDrB1E,EAsDnB0E,oBAAsB,SAACC,GACnB,IAAMC,EAAMD,EAAKE,MACjB7E,EAAKY,SAAS,SAAAoF,GAAA,IAAElB,EAAFkB,EAAElB,QAAF,MAAgB,CAC1BA,QAAO,GAAAC,OAAA9E,OAAA+E,EAAA,EAAA/E,CACA6E,GADA,CAEHF,QA3DO5E,EAgEnBqI,cAAgB,SAACZ,GACb,GAAIA,EAAQa,WAAW,UAAW,CAC9B,IAAMC,EAAad,EAAQe,MAAM,KAEjC,OADAD,EAAWE,QACJ7F,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,gBAAiByF,EAAWhF,IAAI,SAACmF,EAAOjF,GAAR,OAAcb,EAAAxB,EAAAyB,cAAA,OACjErC,IAAKiD,EACLX,UAAU,eACVC,MAAO,CACH4F,gBAAe,OAAA5D,OAAS2D,EAAT,KACfE,eAAgB,SAEpBjF,QAAS,kBAAMkE,OAAO3B,KAAKwC,EAAO,gBAI1C,OAAO9F,EAAAxB,EAAAyB,cAAA,OAAKgG,wBAAyB,CAACC,OAAQ3E,EAAOsD,OA/EtCzH,EAkFnBmP,YAAc,SAAC1O,GAGX,GAFAA,EAAEkG,iBAEE3G,EAAK2B,MAAMyC,KAAM,CACjB,IAAMwC,EAAI5G,EAAK2B,MAAMyC,KAIrB,OAHApE,EAAKY,SAAS,CACVwD,KAAM,KAEHiC,SAAgBQ,YAAYC,YAAW,GAAMC,KAAK,SAACC,GACtDC,IAAMC,KAAN,WAAAnC,OAAsBR,GAAtB,mCAA+D,CAC3DyC,UACAG,IAAKnH,EAAK2B,MAAM+D,EAAEL,KAClBjB,KAAMwC,IAELG,KAAK,SAAAK,GAAQ,IACHC,EAAQD,EAARC,KACP,GAAIA,EAAKC,MAAO,OAAOpF,MAAMmF,EAAKC,SAErCC,MAAM,SAAAC,GAAG,OAAItF,MAAMsF,EAAIC,SAAWD,OAEtCD,MAAM,SAAA9G,GAAC,OAAIyB,MAAMzB,EAAEgH,SAAWhH,OApGvC,IAAM0J,EAAenK,EAAKD,MAAMiN,OAFjB,OAGf7E,QAAQC,IAAI+B,GACZnK,EAAKoK,QAAU/D,aACVC,IAAItG,EAAKD,MAAMwG,UAAY,wBAA0B4D,GAC1DnK,EAAKmG,QAAU,KAEfnG,EAAK2B,MAAQ,CACT6D,cAAe,GACfV,QAAS,GACTY,EAAG,KACHtB,KAAM,IAGVpE,EAAKoK,QAAQ1D,GAAG,cAAe1G,EAAKiF,oBACpCjF,EAAKoK,QAAQ1D,GAAG,gBAAiB1G,EAAKiF,oBAhBvBjF,sFAoBfG,KAAKiK,QAAQhE,uCAsFR,IAAA9D,EAAAnC,KAAAoC,EACgBpC,KAAKwB,MAAnB+D,EADFnD,EACEmD,EAAGZ,EADLvC,EACKuC,QAEV,OACIlC,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,YACXF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,cAAhB,iCACC4C,EAAI9C,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,kBACbF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,kCACZF,EAAAxB,EAAAyB,cAACuM,GAAA,EAAD,KACK1J,EAAE7D,MAEPe,EAAAxB,EAAAyB,cAACuM,GAAA,EAAD,CAAQzL,QAAS,WACbrB,EAAK6D,QAAQC,MACb9D,EAAK1B,SAAS,CAAC8E,EAAG,SAFtB,kBAOJ9C,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,mBACXgC,EAAQvB,IAAI,SAACyF,EAAGvF,GAAJ,OAAUb,EAAAxB,EAAAyB,cAAA,OAAKrC,IAAKiD,EAAGX,UAAW,WAC3CF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAWkG,EAAEC,KAAO,OAAS,SAC9BrG,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,SACXR,EAAK+F,cAAcW,EAAE5E,YAKtCxB,EAAAxB,EAAAyB,cAAA,QAAMqG,SAAU/I,KAAKgP,aACjBvM,EAAAxB,EAAAyB,cAAA,SAAOC,UAAW,eAAgBY,YAAa,yBAAgBhD,MAAOP,KAAKwB,MAAMyC,MAAQ,GAClFlB,SAAU,SAAAzC,GAAC,OAAI6B,EAAK1B,SAAS,CAACwD,KAAM3D,EAAEE,OAAOD,aAG5DkC,EAAAxB,EAAAyB,cAACmL,GAAA5M,EAAD,KACKjB,KAAKwB,MAAM6D,cAAcjC,IAAI,SAACmC,EAAGjC,GAAJ,OAAUb,EAAAxB,EAAAyB,cAACqL,GAAA9M,EAAD,CAAUZ,IAAKiD,GACnDb,EAAAxB,EAAAyB,cAACwL,GAAAjN,EAAD,CACIkN,QAAS5I,EAAE7D,KACXwN,UAAS,6BAAAtK,OAAkBW,EAAE4J,WAApB,OAAAvK,OAAoCW,EAAEI,QAAU,4BAAoByJ,KAAO7J,EAAEI,QAAQC,MAAMyJ,OAAO,2BAA6B,GAA/H,KAAAzK,OAAqIW,EAAE/D,MAAQ,EAAI,iCAAmB,MAGnLiB,EAAAxB,EAAAyB,cAAC0L,GAAAnN,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC2L,GAAApN,EAAD,CAAYqN,aAAW,WAAW9K,QAASrB,EAAK4M,eAAexJ,IAC3D9C,EAAAxB,EAAAyB,cAAC4M,GAAArO,EAAD,oBApJbwC,aA+JR8L,GAAA,SAAU3P,GACrB,OACI6C,EAAAxB,EAAAyB,cAACiB,EAAWC,SAAZ,KACK,SAACC,GAAD,OAASpB,EAAAxB,EAAAyB,cAAC8M,GAAD1P,OAAAc,EAAA,EAAAd,CAAA,GAEC+D,EACAjE,OCER6P,8MAzKXjO,MAAQ,CACJb,KAAM,CACFe,KAAM,GACNrB,IAAK,GACLiM,KAAM,CACFC,oBAAY,EACZC,kBAAU,EACVC,0CAAsB,EACtBC,gCAAiB,OAmB7BC,YAAc,WACV9M,EAAKD,MAAM2H,YAGfqF,WAAa,WAAM,IACRjM,EAAQd,EAAK2B,MAAbb,KACAkM,EAAUhN,EAAKD,MAAfiN,OAEP3G,aAAoBC,IAAItG,EAAKD,MAAMwG,UAAY,WAAW0D,IAA1DhK,OAAAc,EAAA,EAAAd,CAAA,GACO+M,EADP/M,OAAAe,EAAA,EAAAf,CAAA,GAEKa,EAAKN,IAAM,CACRqB,KAAMf,EAAKe,KACX4K,KAAM3L,EAAK2L,SAEhB1F,KAAK,WACJ/G,EAAKY,SAAS,CACVE,KAAM,CACFe,KAAM,GACNrB,IAAK,GACLiM,KAAM,CACFC,oBAAY,EACZC,kBAAU,EACVC,0CAAsB,EACtBC,gCAAiB,MAI7B7M,EAAKD,MAAM2H,cAInBmC,YAAc,SAACrJ,GAAD,OAAS,SAACC,GAAM,IACnBC,EAASD,EAAEE,OAAXD,MACPV,EAAKY,SAAS,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,MAAa,CACvBA,KAAKb,OAAAc,EAAA,EAAAd,CAAA,GACEa,EADHb,OAAAe,EAAA,EAAAf,CAAA,GAECO,EAAME,WAKnBuM,eAAiB,SAACzM,GAAD,OAAS,SAACC,GAAM,IACtByM,EAAWzM,EAAEE,OAAbuM,QACPlN,EAAKY,SAAS,SAAAoF,GAAA,IAAElF,EAAFkF,EAAElF,KAAF,MAAa,CACvBA,KAAKb,OAAAc,EAAA,EAAAd,CAAA,GACEa,EADH,CAEA2L,KAAKxM,OAAAc,EAAA,EAAAd,CAAA,GACEa,EAAK2L,KADRxM,OAAAe,EAAA,EAAAf,CAAA,GAECO,EAAM0M,6FA9DJxC,EAAWC,EAAWC,GACjCzK,KAAKJ,MAAMmG,OACNwE,EAAUxE,MAAQwE,EAAUxE,KAAK1F,MAAQL,KAAKJ,MAAMmG,KAAK1F,KAC1DL,KAAKS,SAAS,CACVE,KAAKb,OAAAc,EAAA,EAAAd,CAAA,GACEE,KAAKwB,MAAMb,KACXX,KAAKJ,MAAMmG,KAAK8G,OAFnB,CAGAxM,IAAKL,KAAKJ,MAAMmG,KAAK1F,0CA6DhC,IAAA2M,EACkBhN,KAAKJ,MAArBmG,EADFiH,EACEjH,KAAMwB,EADRyF,EACQzF,OACN5G,EAAQX,KAAKwB,MAAbb,KACA2L,EAAQ3L,EAAR2L,KAEP,OACI7J,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,aACXF,EAAAxB,EAAAyB,cAAC+I,EAAAxK,EAAD,CACI8E,KAAMA,EACN2F,QAASnE,EACToE,kBAAgB,oBAChBsB,SAAU,MAEVxK,EAAAxB,EAAAyB,cAACkJ,EAAA3K,EAAD,CAAa6B,GAAG,qBAAhB,qCACAL,EAAAxB,EAAAyB,cAACmJ,EAAA5K,EAAD,KACIwB,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI8K,WAAS,EACTC,OAAO,QACPlJ,GAAG,MACHC,SAAU/C,KAAK0J,YAAY,OAC3BwD,MAAM,yBACN3M,MAAOI,EAAKN,IACZ4L,WAAS,EACTjJ,UAAQ,IAEZP,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI+K,OAAO,QACPlJ,GAAG,OACHC,SAAU/C,KAAK0J,YAAY,QAC3BnJ,MAAOI,EAAKe,KACZwL,MAAM,0BACNjB,WAAS,IAEbxJ,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,oBACdvJ,SAAU/C,KAAK8M,eAAe,oBAC9B1D,MAAM,YAGd8D,MAAM,+BAEVzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,kBACdvJ,SAAU/C,KAAK8M,eAAe,kBAC9B1D,MAAM,YAGd8D,MAAM,6BAEVzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,0CACdvJ,SAAU/C,KAAK8M,eAAe,0CAC9B1D,MAAM,YAGd8D,MAAM,qDAEVzK,EAAAxB,EAAAyB,cAACyK,GAAAlM,EAAD,CACImM,QACI3K,EAAAxB,EAAAyB,cAAC2K,GAAApM,EAAD,CACI8L,QAAST,EAAK,gCACdvJ,SAAU/C,KAAK8M,eAAe,gCAC9B1D,MAAM,YAGd8D,MAAM,0DAGdzK,EAAAxB,EAAAyB,cAACwJ,EAAAjL,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAASxD,KAAK2M,YAAavD,MAAM,WAAzC,YAGA3G,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQqK,QAAQ,YAAY9H,QAASxD,KAAK4M,WAAYxD,MAAM,WAA5D,oDAhKC3F,aCCzB,SAASiM,GAAQC,GAeb,OADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAMA,EAAIzL,QAAQ,kHAAsC,MAC9CA,QAAQ,0EAA0B,MAClCA,QAAQ,kCAAc,MACtBA,QAAQ,kHAAsC,MAC9CA,QAAQ,4EAA0B,MAClCA,QAAQ,oCAAc,MACtBA,QAAQ,UAAM,MACdA,QAAQ,kHAAsC,MAC9CA,QAAQ,0EAA0B,MAClCA,QAAQ,kCAAc,MACtBA,QAAQ,kHAAsC,MAC9CA,QAAQ,4EAA0B,MAClCA,QAAQ,oCAAc,MACtBA,QAAQ,UAAM,SAItB0L,eACF,SAAAA,EAAYhQ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4P,IACf/P,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8P,GAAAzP,KAAAH,KAAMJ,KAoBViQ,aAAe,SAACC,EAAM5I,GACW,MAAzBrH,EAAKD,MAAMoF,KAAK9C,MACb4N,IAASjQ,EAAKD,MAAMoF,KAAKrD,OAChC9B,EAAKY,SAAS,SAAAC,GAAA,IAAEmM,EAAFnM,EAAEmM,OAAF,MAAe,CACzBA,OAAO/M,OAAAc,EAAA,EAAAd,CAAA,GACA+M,EADD/M,OAAAe,EAAA,EAAAf,CAAA,GAEDgQ,EAAO5I,QA3BDrH,EAgCnBkQ,YAAc,SAACC,GAAD,OAAO,WACjBnQ,EAAKY,SAAS,CACVwP,eAAgBD,EAChBE,SAAU,SAnCCrQ,EAuCnBsQ,iBAAmB,SAACH,GAAD,OAAO,WACtBnQ,EAAKY,SAAS,CACVwP,eAAgB,KAChBC,SAAUF,MA1CCnQ,EA8CnBuQ,cAAgB,WACZvQ,EAAKY,SAAS,CACV4P,cAAexQ,EAAK2B,MAAM6O,gBAhDfxQ,EAoDnByQ,WAAa,SAACjQ,EAAKwM,GAAN,OAAiB,WAC1B,IAAKxM,IAAQwM,EAAQ,OAAOhN,EAAKY,SAAS,CACtC6P,WAAY,OAEhBzQ,EAAKY,SAAS,CACV6P,WAAY,CACRjQ,MAAKwM,cAvDbhN,EAAK2B,MAAQ,CACTqL,OAAQ,GACRwD,cAAc,EACdE,OAAQ,IAGZ1Q,EAAKsG,IAAMD,aAAoBC,IAAItG,EAAKD,MAAMwG,UAAY,WAAWG,GAAG,QAAS,SAAA/B,GAC7E,IAAIgM,EAAUhM,EAAKE,MACnB5E,OAAOqD,KAAKqN,GAASC,QAAQ,SAAAX,GACzBjQ,EAAKgQ,aAAaC,EAAMU,EAAQV,QAZzBjQ,sFAkBfG,KAAKmG,IAAIF,uCA6CJ,IAAA9D,EAAAnC,KAAAoC,EACgEpC,KAAKwB,MAAnEqL,EADFzK,EACEyK,OAAQoD,EADV7N,EACU6N,eAAgBI,EAD1BjO,EAC0BiO,aAAcH,EADxC9N,EACwC8N,SAAUI,EADlDlO,EACkDkO,WAEjDI,EAAc,CAChBpO,QAAyB,MAFdtC,KAAKJ,MAAboF,KAEa9C,KAAgB,UAAY,QAGhD,OACIO,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,SACXF,EAAAxB,EAAAyB,cAACuI,EAAAhK,EAAD,CAAQiK,SAAS,UACbzI,EAAAxB,EAAAyB,cAAC0I,EAAAnK,EAAD,KACIwB,EAAAxB,EAAAyB,cAAC2I,EAAApK,EAAD,CAAYqK,QAAQ,KAAKlC,MAAM,WAA/B,iBAGR3G,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,kBAEZF,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQqK,QAAQ,YAAYlC,MAAM,UAAU5F,QAASxD,KAAKoQ,cAAexN,MAAO8N,GAAhF,4BAGAjO,EAAAxB,EAAAyB,cAAA,WACAD,EAAAxB,EAAAyB,cAACoJ,EAAA7K,EAAD,CACI6B,GAAG,gBACHoK,MAAM,gDACNlB,OAAO,SACPV,QAAQ,WACRW,WAAS,EACT1L,MAAOP,KAAKwB,MAAM+O,OAClB3N,MAAO8N,EACP3N,SAAU,SAACzC,GAAM,IACNC,EAASD,EAAEE,OAAXD,MACP4B,EAAK1B,SAAS,CAAC8P,OAAQhQ,OAG/BkC,EAAAxB,EAAAyB,cAACiO,GAAD7Q,OAAA8Q,OAAA,CACI7K,KAAMsK,EACN9I,OAAQvH,KAAKoQ,cACbvD,OAAQA,GACJ7M,KAAKJ,QAEb6C,EAAAxB,EAAAyB,cAACmO,GAAD/Q,OAAA8Q,OAAA,CACI7K,KAAMuK,EACN/I,OAAQvH,KAAKsQ,aACbzD,OAAQA,GACJ7M,KAAKJ,QAEZqQ,EAAiBxN,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,aAC9BF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,eAEZF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,kCACXF,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,KACK4L,EAAOoD,GAAgBvO,MAE5Be,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAAS,kBAAMrB,EAAK1B,SAAS,CACjCwP,eAAgB,SADpB,mBAORxN,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,aACZF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,cAAf,yDACAF,EAAAxB,EAAAyB,cAACgM,GAAD,CAAgB7B,OAAQoD,MAEvBC,EAAWzN,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,aAChCF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,eAEZF,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,kCACXF,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,KACK4L,EAAOqD,GAAUxO,MAEtBe,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CAAQuC,QAAS,kBAAMrB,EAAK1B,SAAS,CACjCyP,SAAU,SADd,mBAQRzN,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,aACZF,EAAAxB,EAAAyB,cAAC6M,GAAD,CAAU1C,OAAQqD,MAEjBzN,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,OACnB7C,OAAOqD,KAAK0J,GAAQvH,OAAO,SAAA0K,GAExB,OAAON,GADI7C,EAAOmD,GACAtO,KAAKoP,eAAeC,SAASrB,GAAQvN,EAAKX,MAAM+O,OAAOS,wBAC1E5N,IAAI,SAAC4M,EAAG1M,GAAJ,OAAUb,EAAAxB,EAAAyB,cAAA,OAAKC,UAAU,oCAAoCtC,IAAKiD,GACrEb,EAAAxB,EAAAyB,cAAA,OAAKC,UAAW,4BACRF,EAAAxB,EAAAyB,cAAA,QACIc,QAASrB,EAAK4N,YAAYC,GAC1BrN,UAAW,UAEVkK,EAAOmD,GAAGtO,MAEnBe,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CACIuC,QAASrB,EAAKgO,iBAAiBH,IADnC,qBAKAvN,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CACIuC,QAASrB,EAAK4N,YAAYC,IAD9B,4CAKAvN,EAAAxB,EAAAyB,cAAC6I,EAAAtK,EAAD,CACI2B,MAAO8N,EACPlN,QAASrB,EAAKmO,WAAWN,EAAGnD,EAAOmD,KAFvC,wDAvKZvM,aAsLLwN,GAAA,SAAUrR,GACrB,OACI6C,EAAAxB,EAAAyB,cAACiB,EAAWC,SAAZ,KACK,SAACC,GAAD,OAASpB,EAAAxB,EAAAyB,cAACwO,GAADpR,OAAAc,EAAA,EAAAd,CAAA,GAEC+D,EACAjE,OCpMjBwG,GAAY/B,gBAEZ8M,GAAS,CACXC,OAAQ,0CACRC,WAAY,YACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,gBAGjBC,eACF,SAAAA,EAAY9R,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0R,IACf7R,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4R,GAAAvR,KAAAH,KAAMJ,KAcV+R,SAAW,WACP,IAAMC,EAAY,IAAIC,gBAAgBnK,OAAOG,SAAS0I,QAChD9O,EAAQmQ,EAAUE,IAAI,SACtBC,EAAWH,EAAUE,IAAI,YAE/B,IAAKrQ,EAAO,OAAO5B,EAAKY,SAAS,CAC7BuR,SAAU,aAGdnS,EAAKY,SAAS,CACVuR,SAAU,UACVvQ,QACAsQ,aAGJ7L,SAAgB+L,2BACZxQ,EAAOsQ,GACTnL,KAAK,SAACM,GACJrH,EAAKY,SAAS,CACVyR,IAAKhL,EAAK2C,OAEdhK,EAAKsS,aAAajL,EAAKlC,KAAKoN,OAC7BhL,MAAM,SAACD,GACN,GAAsB,kEAAlBA,EAAMG,QAA6E,OAAOvF,MAAM,0BACpGlC,EAAKwS,YAAY5Q,EAAOsQ,MAvCblS,EA2CnBsS,aAAe,SAACC,GACZlM,aAAoBC,IAAIC,GAAY,UAAYgM,GAAKE,KAAK,SACrD1L,KAAK,SAAApC,GACF0B,aAAoBC,IAAIC,GAAY,WAAWkM,KAAK,SAAS1L,KAAK,SAAA2L,GAC9D,IAAIrP,EAASqP,EAAG7N,MAChBsD,QAAQC,IAAI/E,GACZ,IAAI6B,EAAWP,EAAKE,OAAS,GAE7B,GADAK,EAAS8E,KAAOuI,EACXrN,EAAS7C,KAOP,KACIA,EAAQ6C,EAAR7C,KACPrC,EAAKY,SAAS,CACVuR,SAAU9P,GAAQ,IAAM,QAAU,YAClC8C,KAAMD,SAVVlF,EAAKY,SAAS,CACVuR,SAAU,WACVI,MACAlP,SACAX,SAA4B,IAAlBwC,EAAS7C,WAWlCkF,MAAM,SAAAC,GACHW,QAAQC,IAAIZ,MApELxH,EAwEnBwS,YAAc,SAAC5Q,EAAOsQ,GAKlB,OAJAlS,EAAKY,SAAS,CACVuR,SAAU,SAGP9L,SAAgBsM,+BACnB/Q,EAAOsQ,GACTnL,KAAK,WACH/G,EAAK8R,aACNvK,MAAM,WACLrF,MAAM,6EAlFKlC,EAsFnB4S,UAAY,SAACzN,GACT,IAAM0N,EAAS7S,EAAK2B,MAAM4Q,IAC1B,OAAOlM,aAAoBC,IAAIC,GAAY,UAAYsM,GAAQ5I,IAC3DjK,EAAKkK,eAAe/E,GAClB,SAACqC,GACKA,IACAW,QAAQC,IAAIZ,GACZtF,MAAM,+BAEVlC,EAAKY,SAAS,CACV8B,UAAU,IAEdR,MAAM,kHAlGClC,EAsGnB8S,aAAe,SAACC,GAAD,OAAkB/S,EAAKY,SAASmS,IAtG5B/S,EAwGnB4N,oBAAsB,SAACoF,EAAKC,GACxB,OAAKD,GAAOE,MAAMC,QAAQH,GAAaA,EAChC/S,OAAOqD,KAAK0P,GAAKzP,IAAI,SAAU/C,GAElC,OADAwS,EAAIxS,GAAK,IAAMyS,GAAWzS,EACnBwS,EAAIxS,MA5GAR,EAgHnBkK,eAAiB,SAACkJ,GACd,IAAIC,EAAOpT,OAAO8Q,OAAO,GAAIqC,GAI7B,OAHAnT,OAAOqD,KAAK+P,GAAMzC,QAAQ,SAAUpQ,GAC5BA,EAAI8H,WAAW,aAAa+K,EAAK7S,KAElC6S,GArHQrT,EAwHnBsT,UAAY,WAAM,IACPnB,EAAYnS,EAAK2B,MAAjBwQ,SACDoB,EAAatT,OAAAc,EAAA,EAAAd,CAAA,GACZD,EAAKD,MACLC,EAAK2B,OAEZ,MAAiB,YAAbwQ,EAA+BvP,EAAAxB,EAAAyB,cAAA,SAC/BD,EAAAxB,EAAAyB,cAAA,cAAQD,EAAAxB,EAAAyB,cAAA,WAAKD,EAAAxB,EAAAyB,cAAA,WAAKD,EAAAxB,EAAAyB,cAAA,OAAK2Q,IAAI,4EACJC,IAAI,cAEd,SAAbtB,EAA4BvP,EAAAxB,EAAAyB,cAAC6Q,EAAD,MACf,aAAbvB,EAAgCvP,EAAAxB,EAAAyB,cAACgB,EAAa0P,GACjC,cAAbpB,EAAiCvP,EAAAxB,EAAAyB,cAACyJ,GAAciH,GACnC,UAAbpB,EAA6BvP,EAAAxB,EAAAyB,cAACuO,GAAUmC,GACrC,MApIFlN,OAActE,QACfsE,gBAAuBiL,IAE3BtR,EAAK2B,MAAQ,CACTwQ,SAAU,KACV5L,cAPWvG,oFAYfG,KAAK2R,4CA+HL,OACIlP,EAAAxB,EAAAyB,cAACiB,EAAW6P,SAAZ,CACIjT,MAAO,CACHsD,IAAK7D,KAAKwB,MACViS,YAAazT,KAAK2S,aAClB7Q,SAAU9B,KAAKyS,UACf1I,eAAgB/J,KAAK+J,eACrB0D,oBAAqBzN,KAAKyN,oBAC1BrH,eAGHpG,KAAKmT,oBAvJJ1P,aAiKHiQ,wBAzLA,CACXC,KAAM,CACFC,SAAU,GAEdC,KAAM,CACFD,SAAU,GAEdE,WAAY,CACRC,YAAa,GACbC,YAAa,KAgLNN,CAAmBhC,qBC7LlCuC,IAASC,OAAOzR,EAAAxB,EAAAyB,cAACyR,GAAA,EAAD,KAAe1R,EAAAxB,EAAAyB,cAAC0R,GAAD,OAAyBC,SAASC,eAAe","file":"static/js/main.6a715509.chunk.js","sourcesContent":["import React from 'react'\n\nexport default React.createContext({})","import React, {Component} from 'react'\nimport AppContext from '../../AppContext'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            form: {\n                email: this.props.email || '',\n                name: '',\n                group: '',\n                desc: '',\n                role: 0,\n            }\n        }\n    }\n\n    _onChangeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value\n            }\n        }))\n    }\n\n    _onSubmit = async  () => {\n        const {form} = this.state\n        if (form.email && form.name && form.group && form.name.length > 10) {\n            this.setState({\n                loading: true,\n            })\n            await this.props.register(form)\n            this.setState({\n                loading: false,\n            })\n        } else {\n            alert('Vui lòng điền đầy đủ thông tin')\n        }\n    }\n\n    render() {\n        const {form, loading} = this.state\n        var blockMsg = {\n\t\t\tdisplay: this.props.isLocked ? \"flex\" : \"none\"\n\t\t}\n\t\t\n\t\tvar regForm = {\n\t\t\tdisplay: this.props.isLocked ? \"none\" : \"flex\"\n\t\t}\n\n        return (\n            <div className=\"Register\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\" style={blockMsg}>\n                        Tài khoản của bạn chưa được kích hoạt.<br/>Bạn hãy đợi thêm hoặc thông báo với admin nhé!\n                    </div>\n                    <div className=\"card card-body Card\" style={regForm}>\n                        <small className={'text-muted'}>Trước tiên, bạn phải đăng ký thông tin tài khoản trước</small><br/>\n                        <label htmlFor={'email'}>Email</label>\n                        <input\n                            className={'form-control'}\n                            id={'email'}\n                            value={form.email}\n                            onChange={this._onChangeInput('email')}\n                            disabled\n                        />\n                        <label htmlFor={'name'}>Tên đầy đủ</label>\n                        <input\n                            className={'form-control'}\n                            value={form.name}\n                            id={'name'}\n                            autoComplete={'off'}\n                            onChange={this._onChangeInput('name')}\n                        />\n                        <label htmlFor={'group'}>Mã trường</label>\n                        <select\n                            className=\"custom-select\"\n                            value={form.group}\n                            id={'group'}\n                            onChange={this._onChangeInput('group')}\n                        >\n                            <option>Chọn một trường</option>\n                            {this.props.groups && Object.keys(this.props.groups).map((g, i) => <option\n                                key={i}\n                                value={g}\n                            >\n                                {this.props.groups[g].name}\n                            </option>)}\n                        </select>\n                        {/*/>*/}\n                        <label htmlFor={'desc'}>Lời chào (là tin nhắn sẽ gửi để giới thiệu bản thân khi bạn bắt đầu trả lời tin nhắn)</label>\n                        <input\n                            className={'form-control'}\n                            value={form.desc}\n                            placeholder=\"VD: Xin chào em, anh/chị tên là ABC, học ở lớp DEF trường XYZ\"\n                            id={'desc'}\n                            autoComplete={'off'}\n                            onChange={this._onChangeInput('desc')}\n                        />\n                        <button className={'btn btn-primary mt-3'} onClick={this._onSubmit} disabled={loading}>Đăng ký</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Register\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nclass Init extends Component {\n    render() {\n        return (\n            <div className=\"Register\">\n                <div className=\"container\">\n                    <div className=\"card card-body Card\">\n                        <small className={'text-muted'}>Đang setup tài khoản của bạn</small>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Init\n","export const urlify = (text) => {\n    var urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    return text.replace(urlRegex, function (url) {\n        return '<a target=\"_blank\" href=\"' + url + '\">' + url + '</a>';\n    })\n}\n","import React, {Component} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Icon from '@material-ui/core/Icon'\nimport AppContext from '../../AppContext'\nimport * as firebase from 'firebase'\nimport axios from 'axios'\nimport {animateScroll} from 'react-scroll'\nimport ButtonDropdown from 'reactstrap/es/ButtonDropdown'\nimport DropdownToggle from 'reactstrap/es/DropdownToggle'\nimport DropdownMenu from 'reactstrap/es/DropdownMenu'\nimport DropdownItem from 'reactstrap/es/DropdownItem'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport {urlify} from '../../helpers/text'\n\nconst server = process.env.REACT_APP_SERVER\n\nclass Supporter extends Component {\n    constructor(props) {\n        super(props)\n        const currentGroup = this.props.user.group\n\n        this.convRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\n            .orderByChild('status')\n            .startAt(2)\n            .endAt(3)\n        this.messRef = null\n\n        this.convRef.on('child_added', this.updateConversation)\n        this.convRef.on('child_changed', this.updateConversation)\n        this.messagesEnd = React.createRef()\n\n        this.state = {\n            conversations: [],\n            open: null,\n            current: [],\n            text: '',\n            dropdown: false,\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.current.length !== this.state.current.length) {\n            animateScroll.scrollToBottom({\n                containerId: 'MESSAGES'\n            })\n        }\n    }\n\n    appendToMessageList = (snap) => {\n        const msg = snap.val()\n        this.setState(({current}) => ({\n            current: [\n                ...current,\n                msg,\n            ]\n        }))\n    }\n\n    updateConversation = (snap) => {\n        const userData = this.props.user\n        const conversation = snap.val() || {}\n        conversation.$tid = snap.key\n\n        if (conversation.status !== 2 && conversation.status !== 3) return\n        if (conversation.group !== userData.group) return\n\n        // delete old conversation\n        const newConversations = this.state.conversations.filter(c => {\n            return c.$tid !== conversation.$tid\n        })\n        // add new conversation to top\n        newConversations.unshift(conversation)\n        // sort by time\n        newConversations.sort((a, b) => {\n            if (!a.lastMsg || !b.lastMsg) return 0\n            if (a.lastMsg.time > b.lastMsg.time) {\n                return -1\n            } else if (a.lastMsg.time < b.lastMsg.time) {\n                return 1\n            }\n            return 0\n        })\n\n        this.setState(({conversations}) => ({\n            conversations: newConversations\n        }))\n    }\n\n    onClickConversation = (c) => () => {\n        if (this.state.open && this.state.open.$tid === c.$tid) {\n            this.setState({\n                open: null,\n                current: [],\n                text: '',\n            })\n            if (this.messRef) this.messRef.off('child_added', this.appendToMessageList)\n            return\n        }\n\n        this.setState({\n            open: c,\n            current: [],\n            text: '',\n        })\n\n        this.messRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.user.group + '/' + c.$tid)\n            .orderByKey()\n            .limitToLast(20)\n\n        this.messRef.on('child_added', this.appendToMessageList)\n    }\n\n    _onSubmit = (c) => (e) => {\n        e.preventDefault()\n        if (this.state.text) {\n            const t = this.state.text\n            this.setState({\n                text: '',\n            })\n            return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n                axios.post(`https://${server}/pagetuyensinh/staffSendMessage`, {\n                    idToken,\n                    tid: c.$tid,\n                    text: t\n                })\n                    .then(resp => {\n                        const {data} = resp\n                        if (data.error) return alert(data.error)\n                    })\n                    .catch(err => alert(err.message || err))\n            })\n                .catch(e => alert(e.message || e))\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdown: !this.state.dropdown\n        })\n    }\n\n    out = () => {\n        if (!window.confirm('Bạn có chắc chắn muốn kết thúc cuộc trò chuyện này?')) return\n        firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            return axios.post(`https://${server}/pagetuyensinh/staffResetStatus`, {\n                idToken,\n                'tid': this.state.open.$tid,\n            })\n                .then(ok => {\n                    window.location.reload()\n                })\n                .catch(err => alert(err))\n        })\n    }\n\n    greet = () => {\n        return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n            const c = this.state.open\n            console.log('123')\n\n            axios.post(`${process.env.REACT_APP_SERVER}/pagetuyensinh/staffSendMessage`, {\n                idToken,\n                tid: c.$tid,\n                text: this.props.user.desc,\n            })\n                .then(resp => {\n                    const {data} = resp\n                    if (data.error) return alert(data.error)\n                })\n                .catch(err => alert(err.message || err))\n        })\n            .catch(e => alert(e.message || e))\n    }\n\n    renderMessage = (message) => {\n        if (message.startsWith('$image')) {\n            const image_urls = message.split('|')\n            image_urls.shift()\n            return <div className={'ImageWrapper'}>{image_urls.map((image, i) => <div\n                key={i}\n                className=\"ImageMessage\"\n                style={{\n                    backgroundImage: `url(${image})`,\n                    backgroundSize: 'cover',\n                }}\n                onClick={() => window.open(image, '_blank')}\n            />)}\n            </div>\n        }\n        return <div dangerouslySetInnerHTML={{__html: urlify(message)}}/>\n    }\n\n    renderConversation = () => {\n        const {current, open, dropdown} = this.state\n\n        return <div className={'card mt-3 mb-3'}>\n            <div className={'card-header Title'} onClick={this.onClickConversation(open)}><b>↩ Quay\n                lại </b> | {this.state.open.name}</div>\n            <div className=\" card-body Card\" id={'MESSAGES'}>\n                {current.map((m, i) => <div key={i} className={'Message'}>\n                    <div className={m.page ? 'Ours' : 'Yours'}>\n                        <div className={'Textt'}>{this.renderMessage(m.text)}</div>\n                    </div>\n                </div>)}\n            </div>\n            <div className={'Text'}>\n                <form className={'FormMessage'} onSubmit={this._onSubmit(open)}>\n                    <div style={{\n                        width: '10%'\n                    }}>\n                        < ButtonDropdown isOpen={dropdown} toggle={this.toggle} style={{width: '10%'}}>\n                            <DropdownToggle color={'primary'}><i className='fas fa-bars'></i>\n                            </DropdownToggle>\n                            <DropdownMenu>\n                                <DropdownItem onClick={this.greet}>\n                                    Gửi lời chào hỏi\n                                </DropdownItem>\n                                <DropdownItem onClick={this.out}>\n                                    Kết thúc chat\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </ButtonDropdown>\n                    </div>\n                    <input className={'form-control'} placeholder={'Gửi tin nhắn'} value={this.state.text}\n                           onChange={e => this.setState({text: e.target.value})}/>\n                    <div className={'SendIcon'}>\n                        <button type={'submit'} style={{color: '#fff'}}>\n                            <Icon>send\n                            </Icon>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    }\n\n    editUser = (user) => () => {\n        this.setState({\n            editUser: user ? {...user} : null,\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                [key]: value,\n            }\n        }))\n    }\n\n    handleSaveUser = () => {\n        const {editUser} = this.state\n        firebase.database().ref(this.props.DB_PREFIX + '/users/' + editUser.$uid).set(\n            this.props.removeTempKeys(editUser)\n            , (err) => {\n                if (!err) {\n                    console.log(123)\n                    return this.editUser()()\n                }\n                alert(err)\n            })\n    }\n\n    render() {\n        const {user} = this.props\n        const {conversations, open, editUser} = this.state\n        const bgRead = {'background-color': '#fff'}\n        const bgUnread = {'background-color': '#eee'}\n\n        return (\n            <div className={'Supporter'}>\n                <AppBar position=\"static\" style={{background: '#3E8C33'}}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">Welcome to SCS</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={'container mt-3'}>\n                    <span className=\"text-muted\">Xin chào,</span>\n                    <span className={'font-weight-bold'}> {user.name}</span>\n                    <Button onClick={this.editUser(user)} color=\"primary\">Sửa lời chào</Button>\n\n                    {open ? this.renderConversation() :\n                        conversations.map((c, i) => <div className={'card card-body mt-3 Card'} key={i}\n                                                         onClick={this.onClickConversation(c)}\n                                                         style={c.status !== 3 ? bgRead : bgUnread}>\n                            {c.status !== 3\n                                ? <div className={'Title'}><b>{c.name}</b></div>\n                                : <div className={'Title'}>{c.name}</div>\n                            }\n                            <div\n                                className={'text-muted Conversation'}>{c.lastMsg.text.substring(0, 100)}{c.lastMsg.text.length < 100 ? '' : '...'}</div>\n                        </div>)}\n                </div>\n\n                <Dialog\n                    open={editUser}\n                    onClose={this.editUser(null)}\n                    aria-labelledby=\"form-dialog-title\">\n                    <DialogTitle id=\"form-dialog-title\">Sửa lời chào</DialogTitle>\n                    <DialogContent>\n                        <p>Tự giới thiệu (là tin nhắn sẽ gửi để giới thiệu bản thân khi bạn bắt đầu trả lời tin\n                            nhắn)</p>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"desc\"\n                            onChange={this.changeInput('desc')}\n                            placeholder=\"VD: Xin chào em, anh/chị tên là ABC, học ở lớp DEF trường XYZ\"\n                            value={editUser ? editUser.desc : ''}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.editUser(null)} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSaveUser} color=\"primary\">\n                            Sửa thông tin\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Supporter\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport * as firebase from 'firebase'\n\nclass NewSchool extends Component {\n    state = {\n        form: {\n            name: '',\n            key: '',\n            khoi: {\n                'tự_nhiên': false,\n                'xã_hội': false,\n                'lực_lượng_vũ_trang': false,\n                'cao_đẳng_nghề': false,\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.toggle()\n    }\n\n    handleSave = () => {\n        const {form} = this.state\n        const {school} = this.props\n        if (school[form.key]) alert('Mã trường trùng lặp')\n        firebase.database().ref(this.props.DB_PREFIX + '/groups/' + form.key).set(\n            {\n                name: form.name,\n                khoi: form.khoi,\n            }\n        ).then(() => {\n            this.setState({\n                form: {\n                    name: '',\n                    key: '',\n                    khoi: {\n                        'tự_nhiên': false,\n                        'xã_hội': false,\n                        'lực_lượng_vũ_trang': false,\n                        'cao_đẳng_nghề': false,\n                    }\n                }\n            })\n            this.props.toggle()\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeCheckbox = (key) => (e) => {\n        const {checked} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                khoi: {\n                    ...form.khoi,\n                    [key]: checked\n                }\n            }\n        }))\n    }\n\n    render() {\n        const {open, toggle} = this.props\n        const {form} = this.state\n        const {khoi} = form\n\n        return (\n            <div className=\"NewSchool\">\n                <Dialog\n                    open={open}\n                    onClose={toggle}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"key\"\n                            onChange={this.changeInput('key')}\n                            label=\"Mã trường\"\n                            value={form.key}\n                            fullWidth\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            value={form.name}\n                            label=\"Tên trường\"\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['tự_nhiên']}\n                                    onChange={this.changeCheckbox('tự_nhiên')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối tự nhiên\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['xã_hội']}\n                                    onChange={this.changeCheckbox('xã_hội')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối xã hội\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['lực_lượng_vũ_trang']}\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối lực lượng vũ trang\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['cao_đẳng_nghề']}\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Các trường cao đẳng nghề\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Thêm trường\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default NewSchool\n","import React, {Component} from 'react'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FolderIcon from '@material-ui/icons/AccountCircle'\nimport DeleteIcon from '@material-ui/icons/Create'\nimport * as firebase from 'firebase'\nimport AppContext from '../../AppContext'\nimport Button from '@material-ui/core/Button'\nimport Radio from '@material-ui/core/Radio'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nclass ListSupporters extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n        this.ref = firebase.database().ref(this.props.DB_PREFIX + '/users')\n            .orderByChild('group')\n            .equalTo(this.props.school)\n        this.ref.on('value', snap => this.updateUsers(snap))\n    }\n\n    componentWillUnmount() {\n        this.ref.off()\n    }\n\n    updateUsers = (snap) => {\n        this.setState({\n            users: this.props.decodeFirebaseArray(snap.val() || {}, 'uid')\n        })\n    }\n\n    editUser = (user) => () => {\n        this.setState({\n            editUser: user ? {...user} : null,\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeRadio = (key) => (e) => {\n        const {value} = e.target\n\n        this.setState(({editUser}) => ({\n            editUser: {\n                ...editUser,\n                [key]: Number(value),\n            }\n        }))\n    }\n\n    handleSave = () => {\n        const {editUser} = this.state\n        firebase.database().ref(this.props.DB_PREFIX + '/users/' + editUser.$uid).set(\n            this.props.removeTempKeys(editUser)\n            , (err) => {\n                if (!err) {\n                    console.log(123)\n                    return this.editUser()()\n                }\n                alert(err)\n            })\n    }\n\n    render() {\n        const {users, editUser} = this.state\n\n        return (\n            <div className=\"ListSupporters\">\n                <List dense={false}>\n                    {(!users || !users.length) &&\n                    <div className=\"d-flex justify-content-center\">\n                        <div className={'text-muted'}>Không có tư vấn viên nào thuộc trường này</div>\n                    </div>}\n                    {users.map((user, i) => <ListItem key={i}>\n                        <ListItemIcon>\n                            <FolderIcon/>\n                        </ListItemIcon>\n                        <ListItemText\n                            primary={user.role ? user.name :\n                                <span>{user.name} - <span className={'text-muted'}>Chưa kích hoạt</span></span>}\n                        />\n                        <ListItemSecondaryAction>\n                            <IconButton aria-label=\"Delete\" onClick={this.editUser(user)}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>)}\n                </List>\n                <Dialog\n                    open={editUser}\n                    onClose={this.editUser(null)}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Sửa thông tin tư vấn viên</DialogTitle>\n                    <DialogContent>\n                        <RadioGroup\n                            aria-label={'role'}\n                            onChange={this.changeRadio('role')}\n                            value={editUser ? editUser.role : null}\n                        >\n                            <FormControlLabel value={500} control={<Radio\n                                color={'primary'}/>} label=\"Tư vấn viên\"/>\n                            <FormControlLabel value={800} control={<Radio\n                                color={'primary'}/>} label=\"Biên tập viên\"/>\n                            <FormControlLabel value={0} control={<Radio\n                                color={'primary'}/>} label=\"Hủy kích hoạt\"/>\n                        </RadioGroup>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"email\"\n                            onChange={this.changeInput('email')}\n                            label=\"Email\"\n                            value={editUser ? editUser.email : ''}\n                            type={'email'}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            label=\"Tên đầy đủ\"\n                            value={editUser ? editUser.name : ''}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"desc\"\n                            onChange={this.changeInput('desc')}\n                            label=\"Tự giới thiệu\"\n                            value={editUser ? editUser.desc : ''}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.editUser(null)} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Sửa thông tin\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <ListSupporters\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\nimport * as firebase from 'firebase'\nimport AppContext from '../../AppContext'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport CommentIcon from '@material-ui/icons/Comment'\nimport moment from 'moment'\nimport {Button} from '@material-ui/core'\nimport {urlify} from '../../helpers/text'\nimport axios from 'axios'\nconst server = process.env.REACT_APP_SERVER\n\nclass Messages extends Component {\n    constructor(props) {\n        super(props)\n        const currentGroup = this.props.school\n        console.log(currentGroup)\n        this.convRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/group/' + currentGroup)\n        this.messRef = null\n\n        this.state = {\n            conversations: [],\n            current: [],\n            c: null,\n            text: '',\n        }\n\n        this.convRef.on('child_added', this.updateConversation)\n        this.convRef.on('child_changed', this.updateConversation)\n    }\n\n    componentWillUnmount() {\n        this.convRef.off()\n    }\n\n    updateConversation = (snap) => {\n        const conversation = snap.val() || {}\n        conversation.$tid = snap.key\n\n        console.log(conversation)\n        if (!conversation.psid) return\n\n        var isnew = false\n        const newConversations = this.state.conversations.map(c => {\n            if (c.$tid === conversation.$tid) {\n                isnew = true\n                return conversation\n            }\n            return c\n        })\n        this.setState(({conversations}) => ({\n            conversations: !isnew ? [conversation, ...conversations] : newConversations\n        }))\n    }\n\n    displayMessage = (c) => () => {\n        this.setState({\n            c,\n        })\n        this.messRef = firebase.database()\n            .ref(this.props.DB_PREFIX + '/conversations/msg/' + this.props.school + '/' + c.$tid)\n\n        this.setState({current: []})\n        this.messRef.on('child_added', this.appendToMessageList)\n    }\n\n    appendToMessageList = (snap) => {\n        const msg = snap.val()\n        this.setState(({current}) => ({\n            current: [\n                ...current,\n                msg,\n            ]\n        }))\n    }\n\n    renderMessage = (message) => {\n        if (message.startsWith('$image')) {\n            const image_urls = message.split('|')\n            image_urls.shift()\n            return <div className={'ImageWrapper'}>{image_urls.map((image, i) => <div\n                key={i}\n                className=\"ImageMessage\"\n                style={{\n                    backgroundImage: `url(${image})`,\n                    backgroundSize: 'cover',\n                }}\n                onClick={() => window.open(image, '_blank')}\n            />)}\n            </div>\n        }\n        return <div dangerouslySetInnerHTML={{__html: urlify(message)}}/>\n    }\n\n    sendMessage = (e) => {\n        e.preventDefault()\n\n        if (this.state.text) {\n            const t = this.state.text\n            this.setState({\n                text: '',\n            })\n            return firebase.auth().currentUser.getIdToken(true).then((idToken) => {\n                axios.post(`https://${server}/pagetuyensinh/staffSendMessage`, {\n                    idToken,\n                    tid: this.state.c.$tid,\n                    text: t\n                })\n                    .then(resp => {\n                        const {data} = resp\n                        if (data.error) return alert(data.error)\n                    })\n                    .catch(err => alert(err.message || err))\n            })\n                .catch(e => alert(e.message || e))\n        }\n    }\n\n    render() {\n        const {c, current} = this.state\n\n        return (\n            <div className=\"Messages\">\n                <div className={'text-muted'}>Quản lý tin nhắn</div>\n                {c ? <div className={'card card-body'}>\n                        <div className={'d-flex justify-content-between'}>\n                            <Button>\n                                {c.name}\n                            </Button>\n                            <Button onClick={() => {\n                                this.messRef.off()\n                                this.setState({c: null})\n                            }}>\n                                Quay lại\n                            </Button>\n                        </div>\n                        <div className={'MessagesWrapper'}>\n                            {current.map((m, i) => <div key={i} className={'Message'}>\n                                <div className={m.page ? 'Ours' : 'Yours'}>\n                                    <div className={'Textt'}>\n                                        {this.renderMessage(m.text)}\n                                    </div>\n                                </div>\n                            </div>)}\n                        </div>\n                        <form onSubmit={this.sendMessage}>\n                            <input className={'form-control'} placeholder={'Gửi tin nhắn'} value={this.state.text || ''}\n                                   onChange={e => this.setState({text: e.target.value})}/>\n                        </form>\n                    </div> :\n                    <List>\n                        {this.state.conversations.map((c, i) => <ListItem key={i}>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={`Tư vấn viên: ${c.answeredBy} - ${c.lastMsg ? 'Tin nhắn cuối: ' + moment(c.lastMsg.time).format('MMMM Do YYYY, h:mm:ss a') : ''} ${c.state < 2 ? ' (Đã kết thúc)' : ''}`}\n                            />\n\n                            <ListItemSecondaryAction>\n                                <IconButton aria-label=\"Comments\" onClick={this.displayMessage(c)}>\n                                    <CommentIcon/>\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>)}\n                    </List>\n                }\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Messages\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport * as firebase from 'firebase'\n\nclass EditSchool extends Component {\n    state = {\n        form: {\n            name: '',\n            key: '',\n            khoi: {\n                'tự_nhiên': false,\n                'xã_hội': false,\n                'lực_lượng_vũ_trang': false,\n                'cao_đẳng_nghề': false,\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.open) {\n            if (!prevProps.open || prevProps.open.key !== this.props.open.key) {\n                this.setState({\n                    form: {\n                        ...this.state.form,\n                        ...this.props.open.school,\n                        key: this.props.open.key,\n                    }\n                })\n            }\n        }\n    }\n\n    handleClose = () => {\n        this.props.toggle()\n    }\n\n    handleSave = () => {\n        const {form} = this.state\n        const {school} = this.props\n\n        firebase.database().ref(this.props.DB_PREFIX + '/groups').set({\n            ...school,\n            [form.key]: {\n                name: form.name,\n                khoi: form.khoi,\n            }\n        }).then(() => {\n            this.setState({\n                form: {\n                    name: '',\n                    key: '',\n                    khoi: {\n                        'tự_nhiên': false,\n                        'xã_hội': false,\n                        'lực_lượng_vũ_trang': false,\n                        'cao_đẳng_nghề': false,\n                    }\n                }\n            })\n            this.props.toggle()\n        })\n    }\n\n    changeInput = (key) => (e) => {\n        const {value} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                [key]: value,\n            }\n        }))\n    }\n\n    changeCheckbox = (key) => (e) => {\n        const {checked} = e.target\n        this.setState(({form}) => ({\n            form: {\n                ...form,\n                khoi: {\n                    ...form.khoi,\n                    [key]: checked\n                }\n            }\n        }))\n    }\n\n    render() {\n        const {open, toggle} = this.props\n        const {form} = this.state\n        const {khoi} = form\n\n        return (\n            <div className=\"NewSchool\">\n                <Dialog\n                    open={open}\n                    onClose={toggle}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Thêm trường mới</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"key\"\n                            onChange={this.changeInput('key')}\n                            label=\"Mã trường\"\n                            value={form.key}\n                            fullWidth\n                            disabled\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={this.changeInput('name')}\n                            value={form.name}\n                            label=\"Tên trường\"\n                            fullWidth\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['tự_nhiên']}\n                                    onChange={this.changeCheckbox('tự_nhiên')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối tự nhiên\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['xã_hội']}\n                                    onChange={this.changeCheckbox('xã_hội')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối xã hội\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['lực_lượng_vũ_trang']}\n                                    onChange={this.changeCheckbox('lực_lượng_vũ_trang')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Khối lực lượng vũ trang\"\n                        />\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={khoi['cao_đẳng_nghề']}\n                                    onChange={this.changeCheckbox('cao_đẳng_nghề')}\n                                    color=\"primary\"\n                                />\n                            }\n                            label=\"Các trường cao đẳng nghề\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Hủy\n                        </Button>\n                        <Button variant=\"contained\" onClick={this.handleSave} color=\"primary\">\n                            Sửa thông tin trường\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default EditSchool\n","import React, {Component} from 'react'\nimport AppContext from '../../AppContext'\nimport * as firebase from 'firebase'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport NewSchool from './NewSchool'\nimport ListSupporters from './ListSupporters'\nimport Messages from './Messages'\nimport TextField from '@material-ui/core/TextField'\nimport EditSchool from './EditSchool'\n\nfunction xoa_dau(str) {\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\n    str = str.replace(/đ/g, 'd');\n    str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, 'A');\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, 'E');\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, 'I');\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, 'O');\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, 'U');\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, 'Y');\n    str = str.replace(/Đ/g, 'D');\n    return str;\n}\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            school: {},\n            addNewSchool: false,\n            search: '',\n        }\n\n        this.ref = firebase.database().ref(this.props.DB_PREFIX + '/groups').on('value', snap => {\n            var schools = snap.val()\n            Object.keys(schools).forEach(code => {\n                this.updateSchool(code, schools[code])\n            })\n        })\n    }\n\n    componentWillUnmount() {\n        this.ref.off()\n    }\n\n    updateSchool = (code, data) => {\n        if (this.props.user.role !== 1000\n            && code !== this.props.user.group) return\n        this.setState(({school}) => ({\n            school: {\n                ...school,\n                [code]: data,\n            }\n        }))\n    }\n\n    clickSchool = (s) => () => {\n        this.setState({\n            selectedSchool: s,\n            messages: null,\n        })\n    }\n\n    clickAllMessages = (s) => () => {\n        this.setState({\n            selectedSchool: null,\n            messages: s,\n        })\n    }\n\n    _addNewSchool = () => {\n        this.setState({\n            addNewSchool: !this.state.addNewSchool,\n        })\n    }\n\n    editSchool = (key, school) => () => {\n        if (!key || !school) return this.setState({\n            editSchool: null\n        })\n        this.setState({\n            editSchool: {\n                key, school\n            }\n        })\n    }\n\n    render() {\n        const {school, selectedSchool, addNewSchool, messages, editSchool} = this.state\n        const {user} = this.props\n        const showIfAdmin = {\n            'display': user.role === 1000 ? 'inherit' : 'none'\n        }\n\n        return (\n            <div className=\"Admin\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\">SCS - Admin</Typography>\n                    </Toolbar>\n                </AppBar>\n                <div className={'container mt-3'}>\n\n                    <Button variant=\"contained\" color=\"primary\" onClick={this._addNewSchool} style={showIfAdmin}>\n                        Thêm trường\n                    </Button>\n                    <br/>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"Tìm kiếm theo tên trường\"\n                        margin=\"normal\"\n                        variant='outlined'\n                        fullWidth\n                        value={this.state.search}\n                        style={showIfAdmin}\n                        onChange={(e) => {\n                            const {value} = e.target\n                            this.setState({search: value})\n                        }}\n                    />\n                    <NewSchool\n                        open={addNewSchool}\n                        toggle={this._addNewSchool}\n                        school={school}\n                        {...this.props}\n                    />\n                    <EditSchool\n                        open={editSchool}\n                        toggle={this.editSchool()}\n                        school={school}\n                        {...this.props}\n                    />\n                    {selectedSchool ? <div className={'card mt-3'}>\n                        <div className={'card-header'}>\n\n                            <div className=\"d-flex justify-content-between\">\n                                <Button>\n                                    {school[selectedSchool].name}\n                                </Button>\n                                <Button onClick={() => this.setState({\n                                    selectedSchool: null,\n                                })}>\n                                    Quay lại\n                                </Button>\n                            </div>\n                        </div>\n                        <div className={'card-body'}>\n                            <div className=\"text-muted\">Quản lý danh sách tư vấn viên</div>\n                            <ListSupporters school={selectedSchool}/>\n                        </div>\n                    </div> : messages ? <div className={'card mt-3'}>\n                        <div className={'card-header'}>\n\n                            <div className=\"d-flex justify-content-between\">\n                                <Button>\n                                    {school[messages].name}\n                                </Button>\n                                <Button onClick={() => this.setState({\n                                    messages: null,\n                                })}>\n                                    Quay lại\n                                </Button>\n\n                            </div>\n                        </div>\n                        <div className={'card-body'}>\n                            <Messages school={messages}/>\n                        </div>\n                    </div> : <div className='row'>\n                        {Object.keys(school).filter(s => {\n                            const sc = school[s]\n                            return xoa_dau(sc.name.toLowerCase()).includes(xoa_dau(this.state.search.toLocaleLowerCase()))\n                        }).map((s, i) => <div className='col-12 col-md-6 col-lg-6 col-xl-6' key={i}>\n                            <div className={'card card-body mt-3 Card'}>\n                                    <span\n                                        onClick={this.clickSchool(s)}\n                                        className={'Cursor'}\n                                    >\n                                        {school[s].name}\n                                    </span>\n                                <Button\n                                    onClick={this.clickAllMessages(s)}\n                                >\n                                    Xem tin nhắn\n                                </Button>\n                                <Button\n                                    onClick={this.clickSchool(s)}\n                                >\n                                    Quản lý tư vấn viên\n                                </Button>\n                                <Button\n                                    style={showIfAdmin}\n                                    onClick={this.editSchool(s, school[s])}\n                                >\n                                    Sửa thông tin trường\n                                </Button>\n                            </div>\n                        </div>)}\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default function (props) {\n    return (\n        <AppContext.Consumer>\n            {(app) => <Admin\n                {...{\n                    ...app,\n                    ...props,\n                }}\n            />}\n        </AppContext.Consumer>\n    )\n}\n","import React, {Component} from 'react'\nimport AppContext from './AppContext'\nimport PropTypes from 'prop-types'\nimport {withStyles} from '@material-ui/core/styles'\nimport * as firebase from 'firebase'\nimport Register from './containers/register/Register'\nimport Init from './containers/init/Init'\nimport Supporter from './layouts/supporter/Supporter'\nimport Admin from './layouts/admin/Admin'\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n}\n\nconst DB_PREFIX = process.env.REACT_APP_DB_PREFIX\n\nconst config = {\n    apiKey: 'AIzaSyBxBvZZPxo06HQWHWudRGytuJoSNw5LNX8',\n    authDomain: 'localhost',\n    databaseURL: 'https://page-tuyen-sinh.firebaseio.com',\n    projectId: 'page-tuyen-sinh',\n    storageBucket: 'page-tuyen-sinh.appspot.com',\n    messagingSenderId: '497060879105'\n}\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        if (!firebase.apps.length) {\n            firebase.initializeApp(config);\n        }\n        this.state = {\n            appState: null,\n            DB_PREFIX,\n        }\n    }\n\n    componentWillMount() {\n        this._doLogin()\n    }\n\n    _doLogin = () => {\n        const urlParams = new URLSearchParams(window.location.search)\n        const email = urlParams.get('email')\n        const password = urlParams.get('password')\n\n        if (!email) return this.setState({\n            appState: 'new_user'\n        })\n\n        this.setState({\n            appState: 'loading',\n            email,\n            password,\n        })\n\n        firebase.auth().signInWithEmailAndPassword(\n            email, password\n        ).then((data) => {\n            this.setState({\n                uId: data.$uid\n            })\n            this._getUserInfo(data.user.uid)\n        }).catch((error) => {\n            if (error.message === 'The password is invalid or the user does not have a password.') return alert('Sai mật khẩu')\n            this._doRegister(email, password)\n        })\n    }\n\n    _getUserInfo = (uid) => {\n        firebase.database().ref(DB_PREFIX + '/users/' + uid).once('value')\n            .then(snap => {\n                firebase.database().ref(DB_PREFIX + '/groups').once('value').then(gr => {\n                    var groups = gr.val()\n                    console.log(groups)\n                    var userData = snap.val() || {}\n                    userData.$uid = uid\n                    if (!userData.role) {\n                        this.setState({\n                            appState: 'register',\n                            uid,\n                            groups,\n                            isLocked: userData.role === 0\n                        })\n                    } else {\n                        const {role} = userData\n                        this.setState({\n                            appState: role >= 800 ? 'admin' : 'supporter',\n                            user: userData,\n                        })\n                    }\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    _doRegister = (email, password) => {\n        this.setState({\n            appState: 'init',\n        })\n\n        return firebase.auth().createUserWithEmailAndPassword(\n            email, password\n        ).then(() => {\n            this._doLogin()\n        }).catch(() => {\n            alert('Có lỗi xảy ra, vui lòng báo lại với admin')\n        })\n    }\n\n    _register = (user) => {\n        const userId = this.state.uid\n        return firebase.database().ref(DB_PREFIX + '/users/' + userId).set(\n            this.removeTempKeys(user)\n            , (err) => {\n                if (err) {\n                    console.log(err)\n                    alert('Có lỗi xảy ra')\n                }\n                this.setState({\n                    isLocked: true\n                })\n                alert('Đăng ký thành công, hãy chờ admin duyệt tài khoản của bạn')\n            });\n    }\n\n    _changeState = (changedState) => this.setState(changedState)\n\n    decodeFirebaseArray = (arr, id_name) => {\n        if (!arr || Array.isArray(arr)) return arr;\n        return Object.keys(arr).map(function (key) {\n            arr[key]['$' + id_name] = key;\n            return arr[key];\n        });\n    }\n\n    removeTempKeys = (obj) => {\n        var nObj = Object.assign({}, obj);\n        Object.keys(nObj).forEach(function (key) {\n            if (key.startsWith('$')) delete nObj[key];\n        });\n        return nObj;\n    }\n\n    renderApp = () => {\n        const {appState} = this.state\n        const combinedProps = {\n            ...this.props,\n            ...this.state,\n        }\n        if (appState === 'loading') return <p>\n            <center><br/><br/><img src=\"https://raw.githubusercontent.com/manh16nd/chon-truong/master/loading.gif\"\n                                   alt=\"Loading\"/></center>\n        </p>\n        if (appState === 'init') return <Init/>\n        if (appState === 'register') return <Register {...combinedProps}/>\n        if (appState === 'supporter') return <Supporter {...combinedProps}/>\n        if (appState === 'admin') return <Admin {...combinedProps}/>\n        return null\n    }\n\n    render() {\n\n        return (\n            <AppContext.Provider\n                value={{\n                    app: this.state,\n                    changeState: this._changeState,\n                    register: this._register,\n                    removeTempKeys: this.removeTempKeys,\n                    decodeFirebaseArray: this.decodeFirebaseArray,\n                    DB_PREFIX,\n                }}\n            >\n                {this.renderApp()}\n            </AppContext.Provider>\n        )\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport './scss/index.scss'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}